<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Franz`s blog</title>
  <icon>https://www.gravatar.com/avatar/2e830db9ff9a923cf7910f87dbcb3f90</icon>
  
  <link href="https://blog.frzli.top/atom.xml" rel="self"/>
  
  <link href="https://blog.frzli.top/"/>
  <updated>2023-07-23T07:46:05.274Z</updated>
  <id>https://blog.frzli.top/</id>
  
  <author>
    <name>Franz li</name>
    <email>franzli2003@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jvm内存模型</title>
    <link href="https://blog.frzli.top/2023/07/23/jvm%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/"/>
    <id>https://blog.frzli.top/2023/07/23/jvm%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</id>
    <published>2023-07-23T07:40:46.000Z</published>
    <updated>2023-07-23T07:46:05.274Z</updated>
    
    <content type="html"><![CDATA[<div style="overflow: auto;">    <img src="./image-20230723144425805.png" style="float:left;width:49%">    <img src="./image-20230723144655147.png" style="float:right;width:49%"></div><h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h3><p>堆内存主要用于存储以下内容：</p><ol><li>对象实例：堆内存中存储了Java应用程序创建的所有对象实例以及其实例变量。而每个对象实例的方法仅在方法区中存储一次，不会为每个对象实例单独存储。</li><li>数组：在堆中分配空间以存储数组元素。</li></ol><p>堆内存是垃圾回收器（Garbage Collector, GC）的主要工作区域。在此区域中，垃圾回收器负责自动回收不再使用的对象以释放内存资源。</p><h4 id="堆内存的划分"><a href="#堆内存的划分" class="headerlink" title="堆内存的划分"></a>堆内存的划分</h4><p><img src="/2023/07/23/jvm%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/image.png" alt="image"></p><h5 id="年轻代（Young-Generation）"><a href="#年轻代（Young-Generation）" class="headerlink" title="年轻代（Young Generation）"></a>年轻代（Young Generation）</h5><p>年轻代主要用于存储新创建的对象。它分为以下三个区域：</p><ol><li><p>Eden区：新创建的对象首先分配在这里。当Eden区满时，触发Minor GC（小型垃圾回收）。</p></li><li><p>Survivor区 S0(Survivor Space 0)：存活的对象从Eden区移动至S0区。</p></li><li><p>Survivor S1区(Survivor Space 1)：存活对象在S0和S1之间来回复制，每经过一个GC周期，它们将从一个Survivor区移动到另一个Survivor区。最终，经过若干次GC后，仍存活的对象将被移动到老年代。</p></li></ol><h5 id="老年代（Old-Generation）"><a href="#老年代（Old-Generation）" class="headerlink" title="老年代（Old Generation）"></a>老年代（Old Generation）</h5><p>长寿命周期的对象会被移动到这个区域。老年代比年轻代更大，且垃圾回收的频率较低。当老年代内存不足时，将触发Full GC（全面垃圾回收），清理年轻代和老年代中的对象。</p><h4 id="堆内存中对象区域迁移过程"><a href="#堆内存中对象区域迁移过程" class="headerlink" title="堆内存中对象区域迁移过程"></a>堆内存中对象区域迁移过程</h4><ol><li>当新的对象创建时，首先在年轻代的Eden区分配内存。大多数对象在这个阶段就变得不可达，因此在接下来的Minor GC（小型垃圾回收）中会被回收。</li><li>当Eden区满时，Minor GC会触发。此时，垃圾回收器会清理Eden区并将存活对象移至Survivor区之一（例如Survivor S0区）。</li><li>在接下来的Minor GC中，垃圾回收器将再次清理Eden区。此次回收过程中，已在Survivor S0区的存活对象将与新存活的Eden区对象一并移动到Survivor S1区。与此同时，Survivor S0区的对象将被清理。</li><li>存活对象会在Survivor S0区和Survivor S1区之间来回迁移，直到达到一定年龄阈值（由JVM参数-XX:MaxTenuringThreshold设置）。一旦达到阈值，该对象将被移动到老年代（Old Generation）。</li><li>老年代用于存储长寿命周期的对象。当老年代的空间不足时，会触发Full GC（全面垃圾回收），此时包括年轻代和老年代在内的整个堆空间都会被回收。Full GC相比于Minor GC，效率较低，可能导致应用程序暂停(jvm调优往往是为了防止Full GC)</li></ol><h3 id="方法区"><a href="#方法区" class="headerlink" title="方法区"></a>方法区</h3><p>方法区会存储已被虚拟机加载的 类信息、字段信息、方法信息、常量、静态变量、即时编译器编译后的代码缓存等数据。JDK 1.7中的永久代位于堆空间中，用于存储类元数据、字符串池等内容；而JDK 1.8中的元空间位于本地内存中，替换了永久代。</p><h4 id="为什么将永久代替换为元空间"><a href="#为什么将永久代替换为元空间" class="headerlink" title="为什么将永久代替换为元空间"></a>为什么将永久代替换为元空间</h4><p>永久代的大小是固定的，当类的元数据超过可用空间时，可能导致OutOfMemoryError。元空间位于本地内存（原生内存）中，可分配的空间更大，因此可降低因永久代限制导致内存溢出的风险。</p><h3 id="虚拟机栈"><a href="#虚拟机栈" class="headerlink" title="虚拟机栈"></a>虚拟机栈</h3><p>虚拟机栈由栈帧构成，每次除native方法外的方法调用与返回对应了虚拟机栈的压入和弹出。</p><p>栈帧的构成 </p><p><img src="/2023/07/23/jvm%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/image-1.png" alt="image-1"></p><h4 id="局部变量表"><a href="#局部变量表" class="headerlink" title="局部变量表"></a>局部变量表</h4><p>用于存储该方法中定义的局部变量，包括基本数据类型、对象引用以及返回地址。局部变量表的大小在编译时确定，并在栈帧创建时分配内存。局部变量表中的索引从 0 开始，直到局部变量表的最大长度。</p><h4 id="操作数栈"><a href="#操作数栈" class="headerlink" title="操作数栈"></a>操作数栈</h4><p>用于在执行字节码指令时存储临时值、计算过程中的操作数和结果。操作数栈的最大深度由编译期确定，并在创建栈帧时分配内存。</p><h4 id="动态链接"><a href="#动态链接" class="headerlink" title="动态链接"></a>动态链接</h4><p>栈帧中存储有指向运行时常量池（Runtime Constant Pool）中该方法所属类的引用。采用动态链接机制可在运行时解析并访问类中的方法和字段。</p><h4 id="方法返回地址"><a href="#方法返回地址" class="headerlink" title="方法返回地址"></a>方法返回地址</h4><p>方法执行完毕后，需要将控制权返回给调用方法，方法返回地址负责记住调用方法中的下一条指令地址。这样，在执行完被调用方法后，便可从调用方法中的该地址恢复执行。</p><h3 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈"></a>本地方法栈</h3><p>类似虚拟机栈，用于native方法</p><h3 id="程序计数器"><a href="#程序计数器" class="headerlink" title="程序计数器"></a>程序计数器</h3><p>指向下一条要执行的指令</p><h3 id="运行时常量池"><a href="#运行时常量池" class="headerlink" title="运行时常量池"></a>运行时常量池</h3><p>存储字面量和符号引用：运行时常量池主要用于存储编译期生成的各种字面量（如字符串、数字常量）和符号引用（如类名、字段名称、方法名称及描述符）。这些数据在类加载到JVM后，会存储于运行时常量池中。</p><h3 id="直接内存"><a href="#直接内存" class="headerlink" title="直接内存"></a>直接内存</h3><p>直接内存（Direct Memory）是指 Java 虚拟机（JVM）外的本地内存（Native Memory）。直接内存不受 JVM 堆内存管理和垃圾回收（GC）的控制。</p><h3 id="jdk1-7和jdk1-8内存模型区别"><a href="#jdk1-7和jdk1-8内存模型区别" class="headerlink" title="jdk1.7和jdk1.8内存模型区别"></a>jdk1.7和jdk1.8内存模型区别</h3><ol><li>PermGen（永久代）和 Metaspace（元空间）：在JDK 1.7中，类元数据存储在名为PermGen（永久代）的内存区域中，这是一个受限的空间。当PermGen空间不足时，会引发OutOfMemoryError。而在JDK 1.8中，PermGen被Metaspace（元空间）所替代，它是存在于本地内存（而非堆内存）中的一块更大的区域。由于Metaspace不限制大小，因此它能有效地避免因PermGen导致的内存溢出错误。</li><li>JDK 1.8引入了字符串去重机制，通过G1垃圾回收器来减少相同字符串在堆内存中的存储，从而节省内存空间。但在JDK 1.7中，并没有这个功能。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;div style=&quot;overflow: auto;&quot;&gt;
    &lt;img src=&quot;./image-20230723144425805.png&quot; style=&quot;float:left;width:49%&quot;&gt;
    &lt;img src=&quot;./image-2023072314465</summary>
      
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="jvm" scheme="https://blog.frzli.top/tags/jvm/"/>
    
  </entry>
  
  <entry>
    <title>接口aes+rsa加密实践</title>
    <link href="https://blog.frzli.top/2023/07/20/%E6%8E%A5%E5%8F%A3aes-rsa%E5%8A%A0%E5%AF%86%E5%AE%9E%E8%B7%B5/"/>
    <id>https://blog.frzli.top/2023/07/20/%E6%8E%A5%E5%8F%A3aes-rsa%E5%8A%A0%E5%AF%86%E5%AE%9E%E8%B7%B5/</id>
    <published>2023-07-20T10:02:42.000Z</published>
    <updated>2023-07-20T10:28:44.822Z</updated>
    
    <content type="html"><![CDATA[<p>对于需要加密的接口使用aes+rsa加密</p><p>首先需要明确aes是一种对称加密算法，rsa是一种非对称加密算法。对于这两种加密算法的概念可以自行了解。</p><p><strong>rsa加密的作用是为了加密aes密钥</strong></p><p>这里提到的加密是对于请求数据和接口返回内容都进行加密</p><h3 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h3><ol><li>创建一个rsa密钥对</li><li>前端生成aes密钥</li><li>前端获取生成的rsa公钥</li><li>使用rsa公钥加密aes密钥</li><li>当前端请求加密接口时使用aes密钥加密请求数据，并且把rsa加密后的aes密钥放在请求头Sign的位置。</li><li>后端解密aes密钥，再使用解密后的aes密钥解密请求数据</li><li>后端使用aes密钥加密后返回数据</li><li>前端收到数据，使用aes密钥解密</li></ol><h3 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h3><h4 id="封装aes加解密过程"><a href="#封装aes加解密过程" class="headerlink" title="封装aes加解密过程"></a>封装aes加解密过程</h4><p>使用crypto-js进行aes加解密</p><p>jsencrypt进行rsa的加解密</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">CryptoJS</span> <span class="keyword">from</span> <span class="string">&quot;crypto-js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">JSEncrypt</span> <span class="keyword">from</span> <span class="string">&quot;jsencrypt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> iv = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(<span class="string">&quot;4382822409223508&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">Encrypt</span>(<span class="params">data: <span class="built_in">string</span>, k: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(data),</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(k),</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">iv</span>: iv,</span><br><span class="line">      <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">      <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  ).<span class="title function_">toString</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">Decrypt</span>(<span class="params">data: <span class="built_in">string</span>, k: <span class="built_in">string</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">stringify</span>(<span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">decrypt</span>(</span><br><span class="line">    data,</span><br><span class="line">    <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(k),</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">iv</span>: iv,</span><br><span class="line">      <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">      <span class="attr">padding</span>: <span class="title class_">CryptoJS</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  ))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里面的iv为混淆向量，可以自己随意更改，但是要跟后端保持一致</p><p>注意这里使用的aes模式是CBC&#x2F;Pkcs7模式</p><h4 id="获取rsa公钥，生成本地aes密钥"><a href="#获取rsa公钥，生成本地aes密钥" class="headerlink" title="获取rsa公钥，生成本地aes密钥"></a>获取rsa公钥，生成本地aes密钥</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">initEnc</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">useKeyStore</span>().<span class="title function_">getKey</span>().<span class="property">aesKey</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;e&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; aesKey, rsaPublicKey, encAesKey &#125; = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;e&quot;</span>) <span class="keyword">as</span> <span class="built_in">string</span>)</span><br><span class="line">    <span class="title function_">useKeyStore</span>().<span class="title function_">setKey</span>(aesKey, rsaPublicKey, encAesKey)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> aesKey = <span class="title function_">generateKey</span>()</span><br><span class="line">  <span class="keyword">let</span> rsaPublicKey = <span class="comment">// 这里替换成自己获取rsa公钥逻辑</span></span><br><span class="line">  <span class="keyword">let</span> encrypt = <span class="keyword">new</span> <span class="title class_">JSEncrypt</span>()</span><br><span class="line">  encrypt.<span class="title function_">setPublicKey</span>(rsaPublicKey)</span><br><span class="line">  <span class="keyword">let</span> encAesKey = encrypt.<span class="title function_">encrypt</span>(aesKey)</span><br><span class="line">  <span class="keyword">if</span> (!encAesKey) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;加密失败&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//存储到store</span></span><br><span class="line">  <span class="title function_">useKeyStore</span>().<span class="title function_">setKey</span>(aesKey, encrypt.<span class="title function_">getPublicKeyB64</span>(), encAesKey)</span><br><span class="line">  <span class="comment">// 持久化到localStorage</span></span><br><span class="line">  <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;e&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="title function_">useKeyStore</span>().<span class="title function_">getKey</span>()))</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">generateKey</span>(<span class="params"></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">randomString</span>(<span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">randomString</span>(<span class="params">length: <span class="built_in">number</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> characters =</span><br><span class="line">    <span class="string">&quot;ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> charactersLength = characters.<span class="property">length</span>;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">    result += characters.<span class="title function_">charAt</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * charactersLength));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在应用初始化的地方调用initEnc方法即可。</p><p>这里用到了pinia做状态管理，存储aesKey，加密后的aesKey，rsa公钥</p><p>定义如下</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useKeyStore = <span class="title function_">defineStore</span>(<span class="string">&quot;keyStore&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">aesKey</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">rsaPublicKey</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">encAesKey</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="title function_">setKey</span>(<span class="params">aesKey: <span class="built_in">string</span>,rsaPublicKey:<span class="built_in">string</span>,encAesKey:<span class="built_in">string</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">aesKey</span> = aesKey;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">rsaPublicKey</span> = rsaPublicKey;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">encAesKey</span> = encAesKey;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">setKeyObj</span>(<span class="params">p:<span class="built_in">any</span></span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">aesKey</span> = p[<span class="string">&quot;aesKey&quot;</span>];</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">rsaPublicKey</span> = p[<span class="string">&quot;rsaPublicKey&quot;</span>];</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">encAesKey</span> = p[<span class="string">&quot;encAesKey&quot;</span>];</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">getKey</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="对于axios进行封装-export一个request函数"><a href="#对于axios进行封装-export一个request函数" class="headerlink" title="对于axios进行封装,export一个request函数"></a>对于axios进行封装,export一个request函数</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> request = &lt;<span class="title class_">ResponseType</span> = <span class="built_in">unknown</span>&gt;(</span><br><span class="line">    <span class="attr">url</span>: <span class="built_in">string</span>,</span><br><span class="line">    options?: <span class="title class_">AxiosRequestConfig</span>,</span><br><span class="line">    <span class="attr">encReq</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">encRes</span>: <span class="built_in">boolean</span> = <span class="literal">false</span>,</span><br><span class="line">): <span class="title class_">Promise</span>&lt;<span class="title class_">ResponseType</span>&gt; =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> aesKey = <span class="title function_">useKeyStore</span>().<span class="title function_">getKey</span>().<span class="property">aesKey</span></span><br><span class="line">    <span class="keyword">const</span> encAesKey = <span class="title function_">useKeyStore</span>().<span class="title function_">getKey</span>().<span class="property">encAesKey</span></span><br><span class="line">    <span class="keyword">if</span> (encReq &amp;&amp; options?.<span class="property">data</span>) &#123;</span><br><span class="line">        options.<span class="property">data</span> = <span class="title class_">Encrypt</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(options.<span class="property">data</span>), aesKey)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (encReq || encRes) &#123;</span><br><span class="line">        options = options == <span class="literal">null</span> ?</span><br><span class="line">            &#123; <span class="attr">headers</span>: &#123; <span class="string">&#x27;sign&#x27;</span>: encAesKey &#125; &#125; :</span><br><span class="line">            &#123; ...options, <span class="attr">headers</span>: &#123; ...options.<span class="property">headers</span>, <span class="string">&#x27;sign&#x27;</span>: encAesKey &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">axiosInstance</span>(&#123;</span><br><span class="line">            url,</span><br><span class="line">            ...options</span><br><span class="line">        &#125;)</span><br><span class="line">            .<span class="title function_">then</span>(</span><br><span class="line">                <span class="function">(<span class="params">res: AxiosResponse</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!res.<span class="property">headers</span>.<span class="property">enc</span>) &#123;</span><br><span class="line">                        <span class="title function_">resolve</span>(res.<span class="property">data</span>.<span class="property">data</span>)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">const</span> aesKey = <span class="title function_">useKeyStore</span>().<span class="title function_">getKey</span>().<span class="property">aesKey</span></span><br><span class="line">                    res.<span class="property">data</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">Decrypt</span>(res.<span class="property">data</span>, aesKey))</span><br><span class="line">                    <span class="title function_">resolve</span>(res.<span class="property">data</span>.<span class="property">data</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line">            .<span class="title function_">catch</span>(</span><br><span class="line">                <span class="function">(<span class="params">err</span>) =&gt;</span> <span class="title function_">reject</span>(err)</span><br><span class="line">            )</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设有一个加密接口，只需要这样调用即可</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getXXXXDetail</span>(<span class="params">id: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> request&lt;<span class="built_in">any</span>&gt;(<span class="string">&#x27;/XXXX/detail&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>:&#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,<span class="literal">true</span>,<span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h3><p>思路主要是使用RequestBodyAdviceAdapter和ResponseBodyAdvice进行aop的解密和加密</p><p>对于要加密的接口在方法上标注EncryptController注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD, ElementType.TYPE, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EncryptController&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入参数是否加密</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">requestEncrypt</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回参数是否加密</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">responseEncrypt</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加密接口定义</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping</span></span><br><span class="line">   <span class="meta">@EncryptController(requestEncrypt = true, responseEncrypt = true)</span></span><br><span class="line">   <span class="keyword">public</span> Boolean <span class="title function_">userRegister</span><span class="params">(<span class="meta">@RequestBody</span> UserDto dto)</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> userService.userRegister(dto);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="请求解密"><a href="#请求解密" class="headerlink" title="请求解密"></a>请求解密</h4><p>hutool使用PKCS7时要添加另外的pom依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.bouncycastle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>bcprov-jdk15to18<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.68<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>:Franz Li</span></span><br><span class="line"><span class="comment"> * 请求参数解密</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RequestEncryptAdvice</span> <span class="keyword">extends</span> <span class="title class_">RequestBodyAdviceAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    RSA rsa;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">supports</span><span class="params">(MethodParameter methodParameter, Type targetType, Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; converterType)</span> &#123;</span><br><span class="line">        <span class="type">EncryptController</span> <span class="variable">methodAnnotation</span> <span class="operator">=</span> methodParameter.getMethodAnnotation(EncryptController.class);</span><br><span class="line">        <span class="keyword">return</span> methodAnnotation != <span class="literal">null</span> &amp;&amp; methodAnnotation.requestEncrypt();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> HttpInputMessage <span class="title function_">beforeBodyRead</span><span class="params">(HttpInputMessage inputMessage,</span></span><br><span class="line"><span class="params">                                           MethodParameter parameter,</span></span><br><span class="line"><span class="params">                                           Type targetType,</span></span><br><span class="line"><span class="params">                                           Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; converterType)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">if</span> (inputMessage.getHeaders().get(EncConstant.AES_HEADER).size() &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> decryptBody(inputMessage);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> inputMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> HttpInputMessage <span class="title function_">decryptBody</span><span class="params">(HttpInputMessage inputMessage)</span>&#123;</span><br><span class="line">        <span class="comment">// 用rsa解密aesKey</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">aesKey</span> <span class="operator">=</span> Objects.requireNonNull(inputMessage.getHeaders().get(EncConstant.AES_HEADER)).get(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//redis优化</span></span><br><span class="line">        <span class="keyword">if</span> (Boolean.TRUE.equals(redisTemplate.hasKey(EncConstant.AES_MAP_PREFIX + aesKey))) &#123;</span><br><span class="line">            aesKey = (String) redisTemplate.opsForValue().get(EncConstant.AES_MAP_PREFIX + aesKey);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            aesKey = rsa.decryptStr(aesKey, KeyType.PrivateKey);</span><br><span class="line">            redisTemplate.opsForValue().set(EncConstant.AES_MAP_PREFIX + aesKey, aesKey);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="type">byte</span>[] body = <span class="keyword">new</span> <span class="title class_">byte</span>[inputMessage.getBody().available()];</span><br><span class="line">            inputMessage.getBody().read(body);</span><br><span class="line">            <span class="type">String</span> <span class="variable">bodyStr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(body);</span><br><span class="line">            <span class="type">AES</span> <span class="variable">aes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AES</span>(<span class="string">&quot;CBC&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;PKCS7Padding&quot;</span>,</span><br><span class="line">                    aesKey.getBytes(StandardCharsets.UTF_8),</span><br><span class="line">                    <span class="string">&quot;4382822409223508&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">            log.debug(<span class="string">&quot;bodyStr:&#123;&#125;&quot;</span>, bodyStr);</span><br><span class="line">            bodyStr = aes.decryptStr(bodyStr,CharsetUtil.CHARSET_UTF_8);</span><br><span class="line">            <span class="type">byte</span>[] decrypt = bodyStr.getBytes(StandardCharsets.UTF_8);</span><br><span class="line">            <span class="keyword">final</span> <span class="type">ByteArrayInputStream</span> <span class="variable">bais</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(decrypt);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HttpInputMessage</span>() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> InputStream <span class="title function_">getBody</span><span class="params">()</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> bais;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> HttpHeaders <span class="title function_">getHeaders</span><span class="params">()</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> inputMessage.getHeaders();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.error(<span class="string">&quot;解密失败 &#123;&#125;&quot;</span>,e);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BusinessException</span>(<span class="number">50000</span>,<span class="string">&quot;加密参数异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="响应加密"><a href="#响应加密" class="headerlink" title="响应加密"></a>响应加密</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Order(2)</span></span><br><span class="line"><span class="meta">@RestControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResponseEncryptAdvice</span> <span class="keyword">implements</span> <span class="title class_">ResponseBodyAdvice</span>&lt;Object&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    RSA rsa;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">supports</span><span class="params">(MethodParameter returnType, Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; converterType)</span> &#123;</span><br><span class="line">        <span class="type">EncryptController</span> <span class="variable">methodAnnotation</span> <span class="operator">=</span> returnType.getMethodAnnotation(EncryptController.class);</span><br><span class="line">        <span class="keyword">return</span> methodAnnotation != <span class="literal">null</span> &amp;&amp; methodAnnotation.responseEncrypt();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">beforeBodyWrite</span><span class="params">(Object body,</span></span><br><span class="line"><span class="params">                                  MethodParameter returnType,</span></span><br><span class="line"><span class="params">                                  MediaType selectedContentType,</span></span><br><span class="line"><span class="params">                                  Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt; selectedConverterType,</span></span><br><span class="line"><span class="params">                                  ServerHttpRequest request,</span></span><br><span class="line"><span class="params">                                  ServerHttpResponse response)</span> &#123;</span><br><span class="line">        response.getHeaders().set(<span class="string">&quot;enc&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sign</span> <span class="operator">=</span> request.getHeaders().get(EncConstant.AES_HEADER).get(<span class="number">0</span>);</span><br><span class="line">        sign = rsa.decryptStr(sign, KeyType.PrivateKey);</span><br><span class="line">        <span class="type">AES</span> <span class="variable">aes</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AES</span>(<span class="string">&quot;CBC&quot;</span>,</span><br><span class="line">                <span class="string">&quot;PKCS7Padding&quot;</span>,</span><br><span class="line">                sign.getBytes(StandardCharsets.UTF_8),</span><br><span class="line">                <span class="string">&quot;4382822409223508&quot;</span>.getBytes(StandardCharsets.UTF_8));</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> JSONUtil.toJsonStr(body);</span><br><span class="line">        <span class="keyword">return</span> aes.encryptBase64(content, StandardCharsets.UTF_8);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有多个ResponseBodyAdvice时注意Order的顺序</p><p>上文中注入的RSA对象可以自己按需求注入自己的对象。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;对于需要加密的接口使用aes+rsa加密&lt;/p&gt;
&lt;p&gt;首先需要明确aes是一种对称加密算法，rsa是一种非对称加密算法。对于这两种加密算法的概念可以自行了解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rsa加密的作用是为了加密aes密钥&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里提到的加</summary>
      
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="java" scheme="https://blog.frzli.top/tags/java/"/>
    
    <category term="加密" scheme="https://blog.frzli.top/tags/%E5%8A%A0%E5%AF%86/"/>
    
    <category term="前端" scheme="https://blog.frzli.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>分布式调度视频转码实践</title>
    <link href="https://blog.frzli.top/2023/07/01/%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6%E8%A7%86%E9%A2%91%E8%BD%AC%E7%A0%81%E5%AE%9E%E8%B7%B5/"/>
    <id>https://blog.frzli.top/2023/07/01/%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6%E8%A7%86%E9%A2%91%E8%BD%AC%E7%A0%81%E5%AE%9E%E8%B7%B5/</id>
    <published>2023-07-01T08:54:16.000Z</published>
    <updated>2023-07-20T09:57:28.627Z</updated>
    
    <content type="html"><![CDATA[<p>业务场景: 用户上传视频，通过转码服务器转换成不同码率之后再生成m3u8文件，最后通过hls技术在平台播放。</p><p>技术分析:</p><ol><li>视频以及转码后的视频文件存储位置。考虑到拓展性，选择minio作为存储服务。</li><li>视频转码 ffmpeg</li><li>分布式任务调度 xxl-job,通过xxl-job调度转码服务器拉取minio内容并且转码后推送到minio</li></ol><p>大体流程如下</p><p><img src="/2023/07/01/%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6%E8%A7%86%E9%A2%91%E8%BD%AC%E7%A0%81%E5%AE%9E%E8%B7%B5/img1.png" alt="2023-06-30_11-29"></p><h2 id="xxl-job搭建"><a href="#xxl-job搭建" class="headerlink" title="xxl-job搭建"></a>xxl-job搭建</h2><p><a href="https://www.xuxueli.com/xxl-job/#%E4%BA%8C%E3%80%81%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8">参考xxl-job官方文档的快速入门部分</a></p><p>因为要通过调度中心触发任务，官方给的RESTful API的示例只能直接通过执行器ip的方式触发。通过调试发现调度中心触发任务是通过 http:&#x2F;&#x2F;调度中心地址&#x2F;jobInfo&#x2F;trigger的方式触发的。<br>找到对应的源码处为<code>com.xxl.job.admin.controller.JobInfoController#triggerJob</code><br>我们无法直接调用这个接口，因为这个接口存在鉴权。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/trigger&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> ReturnT&lt;String&gt; <span class="title function_">triggerJob</span><span class="params">(<span class="type">int</span> id, String executorParam, String addressList)</span> &#123;</span><br><span class="line"><span class="comment">// force cover job param</span></span><br><span class="line"><span class="keyword">if</span> (executorParam == <span class="literal">null</span>) &#123;</span><br><span class="line">executorParam = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">JobTriggerPoolHelper.trigger(id, TriggerTypeEnum.MANUAL, -<span class="number">1</span>, <span class="literal">null</span>, executorParam, addressList);</span><br><span class="line"><span class="keyword">return</span> ReturnT.SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过分析源码发现xxl-job的鉴权主要是通过<code>com.xxl.job.admin.controller.annotation.PermissionLimit</code>注解和<code>com.xxl.job.admin.controller.interceptor.PermissionInterceptor</code>拦截器<br>通过在对于的接口处加上<code>@PermissionLimit(limit = false)</code>即可避免接口的鉴权，但是这并不是安全的做法，推荐重新自定义这个接口的鉴权逻辑。</p><p>通过以上修改我们可以通过http:&#x2F;&#x2F;调度中心地址&#x2F;jobInfo&#x2F;trigger这个api触发任务。</p><h2 id="执行器编写"><a href="#执行器编写" class="headerlink" title="执行器编写"></a>执行器编写</h2><p>执行器的目的是为了将mino中的视频转码为不同码率，并且转换为m3u8,所以执行器需要部署在转码服务器上。</p><p>通过xxl-job的BEAN模式（类形式）编写执行器</p><p>通过xxl-job的jobParam传递转码参数。</p><p>注：执行器代码结构并未优化请自行优化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.lang.UUID;</span><br><span class="line"><span class="keyword">import</span> cn.hutool.json.JSONUtil;</span><br><span class="line"><span class="keyword">import</span> com.xxl.job.core.context.XxlJobHelper;</span><br><span class="line"><span class="keyword">import</span> com.xxl.job.core.handler.IJobHandler;</span><br><span class="line"><span class="keyword">import</span> io.minio.DownloadObjectArgs;</span><br><span class="line"><span class="keyword">import</span> io.minio.MinioClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FfmpgeExecutor</span> <span class="keyword">extends</span> <span class="title class_">IJobHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MinioClient minioClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">tmpPath</span> <span class="operator">=</span> <span class="string">&quot;/home/franz/tmp/cover-executor/&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">logFormat</span> <span class="operator">=</span> <span class="string">&quot;=====================  %s =====================&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JobParam jobParam;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="built_in">super</span>.init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">()</span> <span class="keyword">throws</span> IOException, InterruptedException &#123;</span><br><span class="line">        XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;start cover task&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">param</span> <span class="operator">=</span> XxlJobHelper.getJobParam();</span><br><span class="line"></span><br><span class="line">        jobParam = JSONUtil.toBean(param, JobParam.class);</span><br><span class="line">        XxlJobHelper.log(param);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> jobParam.getFileName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> tmpPath + fileName;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (FileUtil.exist(filePath)) &#123;</span><br><span class="line">            FileUtil.del(filePath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        minioClient = MinioClient.builder()</span><br><span class="line">                .endpoint(jobParam.getEndpoint())</span><br><span class="line">                .credentials(jobParam.getAccessKey(), jobParam.getSecretKey())</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;try pull resource from oss&quot;</span>));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">DownloadObjectArgs</span> <span class="variable">downloadObjectArgs</span> <span class="operator">=</span> DownloadObjectArgs</span><br><span class="line">                    .builder()</span><br><span class="line">                    .bucket(jobParam.getBucketName())</span><br><span class="line">                    .object(jobParam.getFileName())</span><br><span class="line">                    .filename(filePath)</span><br><span class="line">                    .build();</span><br><span class="line">            minioClient.downloadObject(downloadObjectArgs);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;pull resource from oss failed&quot;</span>));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行ffmpeg命令</span></span><br><span class="line">        XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;try execute ffmpeg&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.fastUUID().toString();</span><br><span class="line"></span><br><span class="line">        <span class="type">ProcessBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProcessBuilder</span>(<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>,</span><br><span class="line">                <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                        ffmpeg -threads 0 -vsync 1 -i %s \\</span></span><br><span class="line"><span class="string">                            -preset ultrafast \\</span></span><br><span class="line"><span class="string">                            -lavfi &#x27;[0] scale=1280:720[hd],[0] scale=1920:1080[fhd]&#x27; \\</span></span><br><span class="line"><span class="string">                            -vsync 1 \\</span></span><br><span class="line"><span class="string">                            -c:v libx264 -c:a aac -b:v:0 2800k -b:a:0 128k -b:v:1 5000k -b:a:1 192k \\</span></span><br><span class="line"><span class="string">                            -map &#x27;[hd]&#x27; -map 0:a -map &#x27;[fhd]&#x27; -map 0:a \\</span></span><br><span class="line"><span class="string">                            -var_stream_map &#x27;v:0,agroup:hd,name:video_hd a:0,agroup:hd,name:audio_hd v:1,agroup:fhd,name:video_fhd a:1,agroup:fhd,name:audio_fhd&#x27; \\</span></span><br><span class="line"><span class="string">                            -f hls -master_pl_name %s.m3u8 \\</span></span><br><span class="line"><span class="string">                            -ar 44100 -ac 2 \</span></span><br><span class="line"><span class="string">                            -hls_wrap 0 \\</span></span><br><span class="line"><span class="string">                            -g 120 -keyint_min 120 -sc_threshold 0 -muxpreload 0 -muxdelay 0 \\</span></span><br><span class="line"><span class="string">                            -hls_time 20 -hls_flags single_file -hls_playlist_type vod -hls_list_size 0 \\</span></span><br><span class="line"><span class="string">                            -hls_segment_type fmp4 -hls_segment_filename &#x27;%s%%v.mp4&#x27; %s%%v.m3u8</span></span><br><span class="line"><span class="string">                        &quot;&quot;&quot;</span>.formatted(filePath, uuid, tmpPath, tmpPath));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将标准输出和错误输出合并</span></span><br><span class="line">        builder.redirectErrorStream(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动进程</span></span><br><span class="line">        <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> builder.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取输入流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> process.getInputStream();</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(inputStream));</span><br><span class="line"></span><br><span class="line">        String line;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 逐行读取输出</span></span><br><span class="line">        <span class="keyword">while</span> ((line = reader.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">            XxlJobHelper.log(line);</span><br><span class="line">            System.out.println(line);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待进程执行完毕</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">exitCode</span> <span class="operator">=</span> process.waitFor();</span><br><span class="line">        XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;脚本执行完毕，退出码：&quot;</span> + exitCode));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 删除原始视频文件</span></span><br><span class="line">        FileUtil.del(filePath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取临时文件夹所有文件</span></span><br><span class="line">        File[] files = FileUtil.ls(tmpPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 上传文件到oss</span></span><br><span class="line">        <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">            XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;try upload &quot;</span> + file.getName() + <span class="string">&quot; to oss&quot;</span>));</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                minioClient.uploadObject(io.minio.UploadObjectArgs.builder()</span><br><span class="line">                        .bucket(jobParam.getBucketName())</span><br><span class="line">                        .object(file.getName())</span><br><span class="line">                        .filename(file.getAbsolutePath())</span><br><span class="line">                        .build());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;upload file to oss failed&quot;</span>));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 删除oss中原始视频文件</span></span><br><span class="line">        XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;try delete &quot;</span> + fileName + <span class="string">&quot; from oss&quot;</span>));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            minioClient.removeObject(io.minio.RemoveObjectArgs.builder()</span><br><span class="line">                    .bucket(jobParam.getBucketName())</span><br><span class="line">                    .object(fileName)</span><br><span class="line">                    .build());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            XxlJobHelper.log(logFormat.formatted(<span class="string">&quot;delete file from oss failed&quot;</span>));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">JobParam</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String endpoint;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String accessKey;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String secretKey;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String bucketName;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String fileName;</span><br><span class="line"></span><br><span class="line">        ...getter and setter</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中使用到的ffmpeg指令并为使用gpu加速，并且为了转码速度添加了<code>-preset ultrafast</code>参数，请根据实际环境更改ffmpeg的指令，或者通过更加推荐的jave2的方式在java中使用ffmpeg</p><p>上面用的是直接通过minio的java sdk操作的文件，但是ffmpeg好像可以直接通过minio的s3协议直接推送和拉取minio中的资源，反正我没成功。可以自行尝试。</p><h2 id="服务后端"><a href="#服务后端" class="headerlink" title="服务后端"></a>服务后端</h2><p>服务后端主要接口是生成minio的签名上传url和触发任务</p><h3 id="签名上传"><a href="#签名上传" class="headerlink" title="签名上传"></a>签名上传</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;tempurl/&#123;id&#125;/&#123;name&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;ResponseResult&gt; <span class="title function_">getTempUrl</span><span class="params">(<span class="meta">@PathVariable</span> String name, <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (StrUtil.isBlankIfStr(name)) &#123;</span><br><span class="line">        name = UUID.fastUUID().toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">OssSource</span> <span class="variable">ossSource</span> <span class="operator">=</span> service.getById(id);</span><br><span class="line">    <span class="type">Object</span> <span class="variable">client</span> <span class="operator">=</span> OssFactory.createOssClient(ossSource);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ossSource.getType().equals(<span class="string">&quot;minio&quot;</span>)) &#123;</span><br><span class="line">        <span class="type">MinioClient</span> <span class="variable">minioClient</span> <span class="operator">=</span> (MinioClient) client;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            url = minioClient.getPresignedObjectUrl(GetPresignedObjectUrlArgs</span><br><span class="line">                    .builder()</span><br><span class="line">                    .bucket(ossSource.getBucketName())</span><br><span class="line">                    .object(name)</span><br><span class="line">                    .method(Method.PUT)</span><br><span class="line">                    .expiry(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>)</span><br><span class="line">                    .build()</span><br><span class="line">            );</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Map&lt;String, String&gt; m = Map.of(<span class="string">&quot;url&quot;</span>, url);</span><br><span class="line">    <span class="keyword">return</span> ResponseEntity.ok(ResponseResult.success(m));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>出于方便，代码都写在controller里了</p><h3 id="任务触发"><a href="#任务触发" class="headerlink" title="任务触发"></a>任务触发</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">XxlJobutil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;xxl-job.admin.addresses&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String adminAddresses;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;xxl-job.executor.jobId&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer JobId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">triggerJob</span><span class="params">(String fileName)</span>&#123;</span><br><span class="line">        adminAddresses = addSplit4url(adminAddresses);</span><br><span class="line">        <span class="type">String</span> <span class="variable">triggerUrl</span> <span class="operator">=</span> adminAddresses + <span class="string">&quot;jobinfo/trigger&quot;</span>;</span><br><span class="line">        Map&lt;String, Object&gt; paramMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        paramMap.put(<span class="string">&quot;id&quot;</span>, JobId);</span><br><span class="line"></span><br><span class="line">        <span class="type">JobParam</span> <span class="variable">jobParam</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JobParam</span>();</span><br><span class="line">        jobParam.setEndpoint(adminAddresses);</span><br><span class="line">        jobParam.setAccessKey(ak);</span><br><span class="line">        jobParam.setSecretKey(ak);</span><br><span class="line">        jobParam.setBucketName(bk);</span><br><span class="line">        jobParam.setFileName(fileName);</span><br><span class="line"></span><br><span class="line">        paramMap.put(<span class="string">&quot;executorParam&quot;</span>, JSONUtil.toJsonStr(jobParam));</span><br><span class="line">        paramMap.put(<span class="string">&quot;addressList&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> HttpUtil.post(triggerUrl, paramMap, <span class="number">10000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">addSplit4url</span><span class="params">(String url)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (url.endsWith(<span class="string">&quot;/&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> url;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> url + <span class="string">&quot;/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终效果<br><img src="/2023/07/01/%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6%E8%A7%86%E9%A2%91%E8%BD%AC%E7%A0%81%E5%AE%9E%E8%B7%B5/img2.png" alt="2023-07-01_16-08"></p><p><img src="/2023/07/01/%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6%E8%A7%86%E9%A2%91%E8%BD%AC%E7%A0%81%E5%AE%9E%E8%B7%B5/img3.png" alt="2023-07-01_16-09"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;业务场景: 用户上传视频，通过转码服务器转换成不同码率之后再生成m3u8文件，最后通过hls技术在平台播放。&lt;/p&gt;
&lt;p&gt;技术分析:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;视频以及转码后的视频文件存储位置。考虑到拓展性，选择minio作为存储服务。&lt;/li&gt;
&lt;li&gt;视频转码 ffm</summary>
      
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="ffmpeg" scheme="https://blog.frzli.top/tags/ffmpeg/"/>
    
    <category term="xxl-job" scheme="https://blog.frzli.top/tags/xxl-job/"/>
    
    <category term="minio" scheme="https://blog.frzli.top/tags/minio/"/>
    
  </entry>
  
  <entry>
    <title>sso模式之URL重定向传播会话</title>
    <link href="https://blog.frzli.top/2023/06/05/sso%E6%A8%A1%E5%BC%8F%E4%B9%8BURL%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%A0%E6%92%AD%E4%BC%9A%E8%AF%9D/"/>
    <id>https://blog.frzli.top/2023/06/05/sso%E6%A8%A1%E5%BC%8F%E4%B9%8BURL%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%A0%E6%92%AD%E4%BC%9A%E8%AF%9D/</id>
    <published>2023-06-05T11:49:04.000Z</published>
    <updated>2023-07-20T09:54:53.648Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSO是什么"><a href="#SSO是什么" class="headerlink" title="SSO是什么"></a>SSO是什么</h2><p>SSO既SingleSignOn，用户在身份认证服务器上登录一次后，即可无需登录访问其他单点登录系统中的信息。</p><p>本文中认证服务器为 auth.fzzzzz.tech</p><p>客户端1 client.stp.com</p><p>客户端2 client2.stp.com</p><p>部署在不同的域名之下，但是后端可以连接同一个Redis</p><p>最终效果如图</p><p><img src="/2023/06/05/sso%E6%A8%A1%E5%BC%8F%E4%B9%8BURL%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%A0%E6%92%AD%E4%BC%9A%E8%AF%9D/screenshots-1685966891054-2.gif" alt="screenshots"></p><p>当在客户端2通过认证服务器认证后，客户端2获得登录状态，客户端1登录时用户可以无感登录。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><ol><li><p>用户跳转到子系统登录接口</p><p><a href="http://auth.fzzzzz.tech:5500/sso2/auth/%EF%BC%8C%E5%B9%B6%E6%90%BA%E5%B8%A6back%E5%8F%82%E6%95%B0%E8%AE%B0%E5%BD%95%E5%88%9D%E5%A7%8B%E9%A1%B5%E9%9D%A2URL%E3%80%82">http://auth.fzzzzz.tech:5500/sso2/auth/，并携带back参数记录初始页面URL。</a></p><p>登录接口将获得新的cookie</p><ul><li>形如：<code>http://&#123;sso-client&#125;/sso/login?back=xxx</code></li></ul></li><li><p>子系统检测到此用户尚未登录，再次将其重定向至SSO认证中心，并携带redirect参数</p><p>记录子系统的登录页URL。</p><ul><li>形如：<code>http://&#123;sso-server&#125;/sso/auth?redirect=xxx?back=xxx</code></li></ul></li><li><p>用户进入了 SSO认证中心 的登录页面，开始登录。</p></li><li><p>用户 输入账号密码 并 登录成功，SSO认证中心再次将用户重定向至子系统的登录接口   &#x2F;sso&#x2F;login，并携带ticket码参数。</p><ul><li>形如：<code>http://&#123;sso-client&#125;/sso/login?ticket=xxxxxxxxx</code></li></ul></li><li><p>子系统根据 <code>ticket码</code> 从 <code>SSO-Redis</code> 中获取账号id，并在子系统登录此账号会话。</p></li><li><p>当其他系统进入统一登录接口时，因为存在cookie，直接如同第5步返回ticket</p></li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="后端认证代码实现"><a href="#后端认证代码实现" class="headerlink" title="后端认证代码实现"></a>后端认证代码实现</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/redis/go-redis/v9&quot;</span></span><br><span class="line">uuid <span class="string">&quot;github.com/satori/go.uuid&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> rdb = redis.NewClient(&amp;redis.Options&#123;</span><br><span class="line">Addr:     <span class="string">&quot;xxxxxxxxxx&quot;</span>,</span><br><span class="line">Password: <span class="string">&quot;xxxxxxxxxx&quot;</span>,</span><br><span class="line">DB:       <span class="number">0</span>,             <span class="comment">// 默认DB 0</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> ctx = context.Background()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 跨域中间件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CrosMiddleware</span><span class="params">(handler http.HandlerFunc)</span></span> http.Handler &#123;</span><br><span class="line"><span class="keyword">return</span> http.HandlerFunc(<span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">w.Header().Set(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>)</span><br><span class="line">w.Header().Set(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>)</span><br><span class="line">w.Header().Set(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="string">&quot;POST, GET, PUT, DELETE, OPTIONS&quot;</span>)</span><br><span class="line"><span class="comment">//放行所有OPTIONS方法</span></span><br><span class="line"><span class="keyword">if</span> r.Method == <span class="string">&quot;OPTIONS&quot;</span> &#123;</span><br><span class="line">w.WriteHeader(<span class="number">200</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">handler.ServeHTTP(w, r)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过用户名和密码 或者 cookie返回ticket</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">auth</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line"><span class="comment">// 模拟登录</span></span><br><span class="line"><span class="comment">// 如果cookie不存在</span></span><br><span class="line"><span class="keyword">if</span> username := r.FormValue(<span class="string">&quot;username&quot;</span>); username == <span class="string">&quot;admin&quot;</span> &amp;&amp;</span><br><span class="line">r.FormValue(<span class="string">&quot;password&quot;</span>) == <span class="string">&quot;admin&quot;</span>&#123;</span><br><span class="line">tk := uuid.NewV4().String()</span><br><span class="line">cookie := &amp;http.Cookie&#123;</span><br><span class="line">Name:  <span class="string">&quot;token&quot;</span>,</span><br><span class="line">Value: tk,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err := rdb.Set(ctx, <span class="string">&quot;user.login.session.&quot;</span>+username, tk, <span class="number">0</span>).Err();err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">&quot;redis error&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">http.SetCookie(w, cookie)</span><br><span class="line">ticket := uuid.NewV4().String()</span><br><span class="line"><span class="keyword">if</span> err1 := rdb.Set(ctx, <span class="string">&quot;user.login.ticket.&quot;</span>+ticket, username, <span class="number">100</span>*time.Second).Err();err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">&quot;redis error&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">w.Write([]<span class="type">byte</span>(fmt.Sprintf(<span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;msg\&quot;:\&quot;success\&quot;,\&quot;ticket\&quot;:\&quot;%s\&quot;&#125;&quot;</span>, ticket)))</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> cookie, cookieErr := r.Cookie(<span class="string">&quot;token&quot;</span>); cookieErr == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// 如果 cookie 存在</span></span><br><span class="line">username := rdb.Get(ctx, <span class="string">&quot;user.login.session.&quot;</span>+cookie.Value).Val()</span><br><span class="line">ticket := uuid.NewV4().String()</span><br><span class="line">err1 := rdb.Set(ctx, <span class="string">&quot;user.login.ticket.&quot;</span>+ticket, username, <span class="number">100</span>*time.Second).Err()</span><br><span class="line"><span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">&quot;redis error&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">w.Write([]<span class="type">byte</span>(fmt.Sprintf(<span class="string">&quot;&#123;\&quot;code\&quot;:200,\&quot;msg\&quot;:\&quot;success\&quot;,\&quot;ticket\&quot;:\&quot;%s\&quot;&#125;&quot;</span>, ticket)))</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">w.Write([]<span class="type">byte</span>(<span class="string">&quot;&#123;\&quot;code\&quot;:500,\&quot;msg\&quot;:\&quot;fail\&quot;,\&quot;ticket\&quot;:\&quot;null\&quot;&#125;&quot;</span>))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过ticket返回token</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ticketAuth</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line"><span class="comment">// 根据用户名返回ticket</span></span><br><span class="line">ticket := r.FormValue(<span class="string">&quot;ticket&quot;</span>)</span><br><span class="line">tk := uuid.NewV4().String()</span><br><span class="line">cookie := &amp;http.Cookie&#123;</span><br><span class="line">Name:  <span class="string">&quot;token&quot;</span>,</span><br><span class="line">Value: tk,</span><br><span class="line">&#125;</span><br><span class="line">http.SetCookie(w, cookie)</span><br><span class="line"><span class="keyword">if</span> err := rdb.Set(ctx, <span class="string">&quot;user.login.session.&quot;</span>+rdb.Get(ctx, <span class="string">&quot;user.login.ticket.&quot;</span>+ticket).Val(), tk, <span class="number">0</span>).Err();err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">&quot;redis error&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">http.Handle(<span class="string">&quot;/auth&quot;</span>, CrosMiddleware(auth))</span><br><span class="line">http.Handle(<span class="string">&quot;/sso&quot;</span>, CrosMiddleware(ticketAuth))</span><br><span class="line">err := http.ListenAndServe(<span class="string">&quot;:80&quot;</span>, <span class="literal">nil</span>) <span class="comment">// 设置监听的端口</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(<span class="string">&quot;ListenAndServe: &quot;</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="前端认证代码"><a href="#前端认证代码" class="headerlink" title="前端认证代码"></a>前端认证代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>sso-auth<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">render</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;form&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        event.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input[type=&#x27;submit&#x27;]&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        event.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">login</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 如果存在cookie 自动跳转回源页面</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="title function_">getCookie</span>(<span class="string">&quot;token&quot;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// console.log(getCookie(&quot;token&quot;));</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">autoLoginIfLogin</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 登录方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">login</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> username = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input[name=&#x27;username&#x27;]&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> password = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input[name=&#x27;password&#x27;]&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`http://auth.fzzzzz.tech/auth?username=<span class="subst">$&#123;username&#125;</span>&amp;password=<span class="subst">$&#123;password&#125;</span>`</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">credentials</span>: <span class="string">&quot;include&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> body = <span class="keyword">await</span> res.<span class="title function_">json</span>()</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.msg&quot;</span>).<span class="property">innerHTML</span> = body[<span class="string">&#x27;msg&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//重定向</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">redi</span>(body[<span class="string">&#x27;ticket&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">autoLoginIfLogin</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`http://auth.fzzzzz.tech/auth`</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">credentials</span>: <span class="string">&quot;include&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> body = <span class="keyword">await</span> res.<span class="title function_">json</span>()</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.msg&quot;</span>).<span class="property">innerHTML</span> = body[<span class="string">&#x27;msg&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">redi</span>(body[<span class="string">&#x27;ticket&#x27;</span>])</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">innerHTML</span> = <span class="string">`登录</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">    &lt;form&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;用户名&quot;&gt;&lt;br /&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;密码&quot;&gt;&lt;br /&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;input type=&quot;submit&quot; value=&quot;登录&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;button onclick=&#x27;clearCookie()&#x27;&gt;清空cookie&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        &lt;div class=&quot;msg&quot;&gt;&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">    &lt;/form&gt;`</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">   </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">redi</span>(<span class="params">ticket</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 重定向回back</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> back = <span class="title function_">getQueryString</span>(<span class="string">&quot;back&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(back);</span></span><br><span class="line"><span class="language-javascript">        back.<span class="title function_">includes</span>(<span class="string">&quot;?&quot;</span>) ? <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">`<span class="subst">$&#123;back&#125;</span>&amp;ticket=<span class="subst">$&#123;ticket&#125;</span>`</span> : <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">`<span class="subst">$&#123;back&#125;</span>?ticket=<span class="subst">$&#123;ticket&#125;</span>`</span></span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">getQueryString</span>(<span class="params">name</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;(^|&amp;)&#x27;</span> + name + <span class="string">&#x27;=([^&amp;]*)(&amp;|$)&#x27;</span>, <span class="string">&#x27;i&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> r = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">substr</span>(<span class="number">1</span>).<span class="title function_">match</span>(reg);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (r != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 清除所有cookie</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">clearCookie</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> keys = <span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">match</span>(<span class="regexp">/[^ =;]+(?=\=)/g</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (keys) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = keys.<span class="property">length</span>; i--;) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">cookie</span> = keys[i] + <span class="string">&#x27;=0;path=/;expires=&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">0</span>).<span class="title function_">toUTCString</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">cookie</span> = keys[i] + <span class="string">&#x27;=0;path=/;domain=&#x27;</span> + <span class="variable language_">document</span>.<span class="property">domain</span> + <span class="string">&#x27;;expires=&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">0</span>).<span class="title function_">toUTCString</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">cookie</span> = keys[i] + <span class="string">&#x27;=0;path=/;domain=kevis.com;expires=&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">0</span>).<span class="title function_">toUTCString</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;已清除&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取cookie方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">getCookie</span>(<span class="params">name</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> cookieArr = <span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">split</span>(<span class="string">&quot;;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cookieArr.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> cookiePair = cookieArr[i].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (name == cookiePair[<span class="number">0</span>].<span class="title function_">trim</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(cookiePair[<span class="number">1</span>]);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="测试客户端代码"><a href="#测试客户端代码" class="headerlink" title="测试客户端代码"></a>测试客户端代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>sso-client<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">render</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="title function_">getQueryString</span>(<span class="string">&quot;ticket&quot;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">loginByTicket</span>(<span class="title function_">getQueryString</span>(<span class="string">&quot;ticket&quot;</span>)).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">render</span>()</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">loginByTicket</span>(<span class="params">ticket</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> url = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">origin</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 如果有端口移除端口</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (url.<span class="title function_">split</span>(<span class="string">&quot;:&quot;</span>).<span class="property">length</span> &gt; <span class="number">2</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            url = url.<span class="title function_">split</span>(<span class="string">&quot;:&quot;</span>)[<span class="number">0</span>] + <span class="string">&quot;:&quot;</span> + url.<span class="title function_">split</span>(<span class="string">&quot;:&quot;</span>)[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> res = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`<span class="subst">$&#123;url&#125;</span>/sso?ticket=<span class="subst">$&#123;ticket&#125;</span>`</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">credentials</span>: <span class="string">&quot;include&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 移除ticket</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">replaceState</span>(&#123;&#125;, <span class="literal">null</span>, <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>.<span class="title function_">split</span>(<span class="string">&quot;?&quot;</span>)[<span class="number">0</span>])</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">clearCookie</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> keys = <span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">match</span>(<span class="regexp">/[^ =;]+(?=\=)/g</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (keys) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = keys.<span class="property">length</span>; i--;) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">cookie</span> = keys[i] + <span class="string">&#x27;=0;path=/;expires=&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">0</span>).<span class="title function_">toUTCString</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">cookie</span> = keys[i] + <span class="string">&#x27;=0;path=/;domain=&#x27;</span> + <span class="variable language_">document</span>.<span class="property">domain</span> + <span class="string">&#x27;;expires=&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">0</span>).<span class="title function_">toUTCString</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="property">cookie</span> = keys[i] + <span class="string">&#x27;=0;path=/;domain=kevis.com;expires=&#x27;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">0</span>).<span class="title function_">toUTCString</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;已清除&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;body&quot;</span>).<span class="property">innerHTML</span> =</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">getCookie</span>(<span class="string">&quot;token&quot;</span>) ?</span></span><br><span class="line"><span class="language-javascript">                <span class="string">`已登录 cookie = <span class="subst">$&#123;getCookie(<span class="string">&quot;token&quot;</span>)&#125;</span>`</span> :</span></span><br><span class="line"><span class="language-javascript">                <span class="string">`未登录 &lt;a href=&#x27;http://auth.fzzzzz.tech:5500/sso2/auth/?back=<span class="subst">$&#123;<span class="variable language_">window</span>.location.href&#125;</span>&#x27;&gt;去认证中心登录&lt;/a&gt;`</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;body&quot;</span>).<span class="property">innerHTML</span> += <span class="string">&quot;&lt;br /&gt;&lt;button onclick=&#x27;clearCookie()&#x27;&gt;清空cookie&lt;/button&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">getCookie</span>(<span class="params">name</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> cookieArr = <span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">split</span>(<span class="string">&quot;;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cookieArr.<span class="property">length</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> cookiePair = cookieArr[i].<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (name == cookiePair[<span class="number">0</span>].<span class="title function_">trim</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(cookiePair[<span class="number">1</span>]);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">getQueryString</span>(<span class="params">name</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;(^|&amp;)&#x27;</span> + name + <span class="string">&#x27;=([^&amp;]*)(&amp;|$)&#x27;</span>, <span class="string">&#x27;i&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> r = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">substr</span>(<span class="number">1</span>).<span class="title function_">match</span>(reg);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (r != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SSO是什么&quot;&gt;&lt;a href=&quot;#SSO是什么&quot; class=&quot;headerlink&quot; title=&quot;SSO是什么&quot;&gt;&lt;/a&gt;SSO是什么&lt;/h2&gt;&lt;p&gt;SSO既SingleSignOn，用户在身份认证服务器上登录一次后，即可无需登录访问其他单点登录系统中的信息</summary>
      
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="go" scheme="https://blog.frzli.top/tags/go/"/>
    
    <category term="sso" scheme="https://blog.frzli.top/tags/sso/"/>
    
  </entry>
  
  <entry>
    <title>sse 的原理以及java下的简单实现</title>
    <link href="https://blog.frzli.top/2023/05/19/sse%20%E7%9A%84%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8Ajava%E4%B8%8B%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/"/>
    <id>https://blog.frzli.top/2023/05/19/sse%20%E7%9A%84%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8Ajava%E4%B8%8B%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-05-19T02:39:27.000Z</published>
    <updated>2023-07-20T09:49:01.643Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间看到gpt返回时的部分输出的效果，觉得很有意思，所以研究了下是怎么实现的。</p><p>主要是通过sse（Server-Sent Events）技术实现的这种效果</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SSE（Server-Sent Events）和WebSocket都是用于实现服务器和客户端之间的实时通信的技术，但它们有一些区别。</p><p>SSE是一种单向通信协议，它允许服务器向客户端发送事件流。客户端通过一个持久化的HTTP连接接收事件流，这个连接可以保持打开状态，直到客户端关闭连接或服务器关闭连接。</p><p>WebSocket是一种双向通信协议，它允许服务器和客户端之间进行实时双向通信。WebSocket通过一个持久化的TCP连接实现双向通信，客户端和服务器可以随时发送消息。</p><h2 id="sse"><a href="#sse" class="headerlink" title="sse"></a>sse</h2><h3 id="1-如何保持长连接"><a href="#1-如何保持长连接" class="headerlink" title="1.如何保持长连接"></a>1.如何保持长连接</h3><p>在http 1.1下Keep-Alive模式默认开启，服务端会通过tcp协议发送一个不带数据的ack请求，确保客户端的在线。</p><h3 id="2-如何判断数据完整性"><a href="#2-如何判断数据完整性" class="headerlink" title="2.如何判断数据完整性"></a>2.如何判断数据完整性</h3><p>当客户端接收到数据后会通过判断<code>Content-Length</code>或者<code>Transfer-Encoding</code>响应头判断哪一部分是完整数据。</p><h3 id="3-客户端如何判断是sse"><a href="#3-客户端如何判断是sse" class="headerlink" title="3.客户端如何判断是sse"></a>3.客户端如何判断是sse</h3><p>通过客户端设置响应头<code>Content-type</code>为<code>text/event-stream</code>。</p><p><img src="/2023/05/19/sse%20%E7%9A%84%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8Ajava%E4%B8%8B%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/img1.png" alt="image-20230519105824786"></p><h3 id="java简单代码实现"><a href="#java简单代码实现" class="headerlink" title="java简单代码实现"></a>java简单代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/streaming&quot;,asyncSupported = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">StreamingServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ExecutorService</span> <span class="variable">executorService</span> <span class="operator">=</span> Executors.newCachedThreadPool();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line">        <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 设置响应内容类型为SSE</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/event-stream&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 开启异步上下文</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">AsyncContext</span> <span class="variable">asyncContext</span> <span class="operator">=</span> request.startAsync();</span><br><span class="line">        <span class="comment">// 使用线程池执行任务</span></span><br><span class="line">        executorService.execute(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                    <span class="comment">// 发送数据</span></span><br><span class="line">                    writer.write(<span class="string">&quot;data: &quot;</span> + i + <span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">                    writer.flush();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 模拟数据产生的延迟</span></span><br><span class="line">                    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException | InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                asyncContext.complete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 关闭线程池</span></span><br><span class="line">        executorService.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果</p><p><img src="/2023/05/19/sse%20%E7%9A%84%E5%8E%9F%E7%90%86%E4%BB%A5%E5%8F%8Ajava%E4%B8%8B%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/img2.png" alt="image-20230519110903114"></p><h4 id="AsyncContext"><a href="#AsyncContext" class="headerlink" title="AsyncContext"></a>AsyncContext</h4><p>看到别人实现sse时都使用的AsyncContext，但是并不知道有啥用,查询资料后得知</p><p>使用<code>final AsyncContext asyncContext = request.startAsync();</code>可以实现Servlet 线程将请求转交给一个异步线程来执行业务处理，线程本身返回至容器，等待异步线程任务结束后可以直接生成响应数据。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前段时间看到gpt返回时的部分输出的效果，觉得很有意思，所以研究了下是怎么实现的。&lt;/p&gt;
&lt;p&gt;主要是通过sse（Server-Sent Events）技术实现的这种效果&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="java" scheme="https://blog.frzli.top/tags/java/"/>
    
    <category term="sse" scheme="https://blog.frzli.top/tags/sse/"/>
    
  </entry>
  
  <entry>
    <title>nginx 中使用中文路径使用 try_files 的一些坑</title>
    <link href="https://blog.frzli.top/2023/04/12/nginx-%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%B8%AD%E6%96%87%E8%B7%AF%E5%BE%84%E4%BD%BF%E7%94%A8-try-files-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
    <id>https://blog.frzli.top/2023/04/12/nginx-%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%B8%AD%E6%96%87%E8%B7%AF%E5%BE%84%E4%BD%BF%E7%94%A8-try-files-%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</id>
    <published>2023-04-12T12:38:05.000Z</published>
    <updated>2023-07-20T09:46:18.109Z</updated>
    
    <content type="html"><![CDATA[<p>nginx 配置如下</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">location</span> <span class="string">~ /download/(?&lt;filename&gt;.*) &#123;</span></span><br><span class="line">            <span class="attr">set</span> <span class="string">$bid &quot;&quot;;</span></span><br><span class="line">            <span class="attr">set</span> <span class="string">$filename $1;</span></span><br><span class="line">            <span class="attr">access_by_lua_file</span> <span class="string">lua/auth.lua;</span></span><br><span class="line">            <span class="attr">root</span> <span class="string">/toss/;</span></span><br><span class="line">            <span class="attr">try_files</span> <span class="string">/$bid/$filename /$filename =404;</span></span><br><span class="line">            <span class="attr">lua_code_cache</span> <span class="string">off;</span></span><br><span class="line">        <span class="attr">charset</span> <span class="string">utf-8;        </span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><p>当通过 <a href="http://example.com/download/%E6%B5%8B%E8%AF%95.jpg">http://example.com/download/测试.jpg</a> 时出现404 no found问题</p><p>原因是filename变量是通过urlencode后的值，nginx在磁盘中找不到该文件</p><p>解决方法: 通过access_by_lua_file解码并修改更改filename的值</p><p>核心代码如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">urlDecode</span><span class="params">(s)</span></span></span><br><span class="line">    s = <span class="built_in">string</span>.<span class="built_in">gsub</span>(s, <span class="string">&#x27;%%(%x%x)&#x27;</span>, <span class="function"><span class="keyword">function</span><span class="params">(h)</span></span> <span class="keyword">return</span> <span class="built_in">string</span>.<span class="built_in">char</span>(<span class="built_in">tonumber</span>(h, <span class="number">16</span>)) <span class="keyword">end</span>)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">ngx.var.filename = urlDecode(ngx.var.filename)</span><br></pre></td></tr></table></figure><p>如果解码之后还是出现404 no found可以使用<code>locale</code>检查一下服务器编码确定是utf-8编码，即LANG&#x3D;en_US.utf8 并且在location块配置charset utf-8;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;nginx 配置如下&lt;/p&gt;
&lt;figure class=&quot;highlight properties&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;</summary>
      
    
    
    
    
    <category term="nginx" scheme="https://blog.frzli.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Openresty 实现 WebDAV 功能 ，并且实现在 WebDAV 下多用户认证以及访问目录控制 - 2</title>
    <link href="https://blog.frzli.top/2023/04/06/Openresty-%E5%AE%9E%E7%8E%B0-WebDAV-%E5%8A%9F%E8%83%BD-%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AE%9E%E7%8E%B0%E5%9C%A8-WebDAV-%E4%B8%8B%E5%A4%9A%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E4%BB%A5%E5%8F%8A%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95%E6%8E%A7%E5%88%B6-2/"/>
    <id>https://blog.frzli.top/2023/04/06/Openresty-%E5%AE%9E%E7%8E%B0-WebDAV-%E5%8A%9F%E8%83%BD-%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AE%9E%E7%8E%B0%E5%9C%A8-WebDAV-%E4%B8%8B%E5%A4%9A%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E4%BB%A5%E5%8F%8A%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95%E6%8E%A7%E5%88%B6-2/</id>
    <published>2023-04-06T03:37:28.000Z</published>
    <updated>2023-07-20T09:45:08.852Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.frzli.top/2023/03/25/Openresty-%E5%AE%9E%E7%8E%B0-WebDAV-%E5%8A%9F%E8%83%BD-%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AE%9E%E7%8E%B0%E5%9C%A8-WebDAV-%E4%B8%8B%E5%A4%9A%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E4%BB%A5%E5%8F%8A%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95%E6%8E%A7%E5%88%B6/">关于openresty-dav的编译以及简单的webdav部署请看上文</a></p><p>在上文中我们编译了带WebDAV功能的Openresty，并且实现了简单的WebDAV功能</p><h2 id="Openresty配置文件"><a href="#Openresty配置文件" class="headerlink" title="Openresty配置文件"></a>Openresty配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">location ~ /dav/(?&lt;bucket_id&gt;\d+)/(?&lt;sub_path&gt;.*) &#123;</span><br><span class="line">    set $user_path &quot;&quot;;</span><br><span class="line">    set $bucket_id $1;</span><br><span class="line">    # 临时文件夹</span><br><span class="line">    client_body_temp_path /toss/tmp;</span><br><span class="line">    # webdav 支持的方式</span><br><span class="line">    dav_methods  PUT DELETE MKCOL COPY MOVE;</span><br><span class="line">    # webdav 插件支持的请求方式</span><br><span class="line">    dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;</span><br><span class="line"></span><br><span class="line">    create_full_put_path on;</span><br><span class="line">    # 访问权限</span><br><span class="line">    dav_access      user:rw group:rw  all:r;</span><br><span class="line"></span><br><span class="line">    #禁止创建文件夹</span><br><span class="line">    if ($request_method = MKCOL) &#123;</span><br><span class="line">        return 405;</span><br><span class="line">    &#125;</span><br><span class="line">    # 网页自动索引</span><br><span class="line">    autoindex on;</span><br><span class="line">    # 基于 http basic 的认证</span><br><span class="line">    auth_basic &quot;Authorized Users Only&quot;;</span><br><span class="line">    # 权限控制和 user_path 控制</span><br><span class="line">    access_by_lua_file lua/webdav_auth.lua;</span><br><span class="line">    # 设置目录</span><br><span class="line">    alias $user_path/$sub_path;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以通过access_by_lua_file文件动态控制webdav访问的目录以及用户认证。</p><p>在lua file中设置$user_path以及$sub_path变量</p><p>通过http basic进行用户的认证</p><h2 id="lua脚本编写"><a href="#lua脚本编写" class="headerlink" title="lua脚本编写"></a>lua脚本编写</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> mysql = <span class="built_in">require</span>(<span class="string">&quot;resty.mysql&quot;</span>)</span><br><span class="line"><span class="keyword">local</span> resty_sha1 = <span class="built_in">require</span>(<span class="string">&quot;resty.sha1&quot;</span>)</span><br><span class="line"><span class="keyword">local</span> str = <span class="built_in">require</span>(<span class="string">&quot;resty.string&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> headers = ngx.req.get_headers()</span><br><span class="line"><span class="keyword">local</span> authorization = headers[<span class="string">&quot;Authorization&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> salt = <span class="string">&quot;qefd1y098ehudi&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> db, err = mysql:new()</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> db <span class="keyword">then</span></span><br><span class="line">    ngx.<span class="built_in">log</span>(ngx.ERR, <span class="string">&quot;failed to instantiate mysql: &quot;</span>, err)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">db:set_timeout(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">local</span> ok, err, errno, sqlstate = db:connect &#123;</span><br><span class="line">    host = <span class="string">&quot;db&quot;</span>,</span><br><span class="line">    port = <span class="number">3306</span>,</span><br><span class="line">    database = <span class="string">&quot;dbname&quot;</span>,</span><br><span class="line">    user = <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    password = <span class="string">&quot;pwd&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> ok <span class="keyword">then</span></span><br><span class="line">    ngx.<span class="built_in">log</span>(ngx.ERR, <span class="string">&quot;failed to connect: &quot;</span>, err, <span class="string">&quot;: &quot;</span>, errno, <span class="string">&quot; &quot;</span>, sqlstate)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">close_db</span><span class="params">(db)</span></span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> db <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    db:<span class="built_in">close</span>()</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">(username, password)</span></span></span><br><span class="line">    <span class="keyword">local</span> sha1 = resty_sha1:new()</span><br><span class="line">    sha1:update(password)</span><br><span class="line">    sha1:update(salt)</span><br><span class="line">    <span class="keyword">local</span> digest = sha1:final()</span><br><span class="line">    <span class="keyword">local</span> pwd = <span class="built_in">tostring</span>(str.to_hex(digest))</span><br><span class="line">    <span class="keyword">local</span> quoted = ngx.quote_sql_str(<span class="built_in">tostring</span>(username))</span><br><span class="line">    <span class="keyword">local</span> sql = <span class="string">&quot;SELECT count(*) sum FROM `tb_sysuser` where `username` =  &quot;</span> ..quoted.. <span class="string">&quot;  and `password` =  &#x27;&quot;</span> ..pwd .. <span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    ngx.<span class="built_in">log</span>(ngx.ALERT,<span class="string">&quot;sql = &quot;</span> .. sql)</span><br><span class="line">    res, err, errno, sqlstate = db:query(sql)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res <span class="keyword">then</span></span><br><span class="line">        ngx.<span class="built_in">log</span>(ngx.ALERT,<span class="string">&quot;database Error \n&quot;</span> .. err)</span><br><span class="line">        close_db(db)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, row <span class="keyword">in</span> <span class="built_in">ipairs</span>(res) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> name, value <span class="keyword">in</span> <span class="built_in">pairs</span>(row) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> name == <span class="string">&quot;sum&quot;</span> <span class="keyword">then</span></span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ALERT, <span class="string">&quot;value = &quot;</span> .. value)</span><br><span class="line">                <span class="keyword">return</span> value == <span class="string">&quot;1&quot;</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">checkPriviledge</span><span class="params">(username)</span></span></span><br><span class="line">    <span class="keyword">local</span> quoted = ngx.quote_sql_str(<span class="built_in">tostring</span>(username))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">local</span> sql = <span class="string">&quot;select privilege from tb_bucket_privilege where bid = &quot;</span>..ngx.var.bucket_id..<span class="string">&quot; and uid = (SELECT id from tb_sysuser where username = &quot;</span>..quoted..<span class="string">&quot; )&quot;</span></span><br><span class="line"></span><br><span class="line">    ngx.<span class="built_in">log</span>(ngx.ALERT,<span class="string">&quot;sql = &quot;</span> .. sql)</span><br><span class="line"></span><br><span class="line">    res, err, errno, sqlstate = db:query(sql)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> res <span class="keyword">then</span></span><br><span class="line">        ngx.<span class="built_in">log</span>(ngx.ALERT,<span class="string">&quot;database Error \n&quot;</span> .. err)</span><br><span class="line">        close_db(db)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, row <span class="keyword">in</span> <span class="built_in">ipairs</span>(res) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> name, value <span class="keyword">in</span> <span class="built_in">pairs</span>(row) <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">if</span> name == <span class="string">&quot;privilege&quot;</span> <span class="keyword">then</span></span><br><span class="line">                close_db(db)</span><br><span class="line">                ngx.<span class="built_in">log</span>(ngx.ALERT, <span class="string">&quot;value = &quot;</span> .. value)</span><br><span class="line">                <span class="keyword">return</span> value == <span class="string">&quot;rw&quot;</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">fail</span><span class="params">()</span></span></span><br><span class="line">    ngx.header[<span class="string">&quot;WWW-Authenticate&quot;</span>] = <span class="string">&#x27;Basic realm=&quot;Restricted Area&quot;&#x27;</span></span><br><span class="line">    ngx.<span class="built_in">exit</span>(ngx.HTTP_UNAUTHORIZED)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> authorization <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">local</span> encoded = authorization:<span class="built_in">sub</span>(<span class="number">7</span>)</span><br><span class="line">    <span class="keyword">local</span> decoded = ngx.decode_base64(encoded)</span><br><span class="line">    <span class="keyword">local</span> username, password = decoded:<span class="built_in">match</span>(<span class="string">&quot;([^:]*):(.*)&quot;</span>)</span><br><span class="line">    ngx.<span class="built_in">log</span>(ngx.ALERT, username .. <span class="string">&quot;:&quot;</span> .. password)</span><br><span class="line">    <span class="keyword">if</span> check(username, password) <span class="keyword">then</span></span><br><span class="line">        ngx.req.set_header(<span class="string">&quot;X-User&quot;</span>, username)</span><br><span class="line">        <span class="keyword">local</span> readlPath = <span class="string">&quot;/toss/&quot;</span> .. ngx.var.bucket_id</span><br><span class="line">        ngx.<span class="built_in">log</span>(ngx.ALERT,readlPath)</span><br><span class="line">        <span class="keyword">if</span> checkPriviledge(username) <span class="keyword">then</span></span><br><span class="line">            ngx.var.user_path = readlPath</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            fail()</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        fail()</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    fail()</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>通过上述lua脚本控制访问权限和访问目录</p><p>注意上面lua脚本默认的访问根目录是 &#x2F;toss&#x2F;</p><p>通过访问mysql数据库校验权限</p>]]></content>
    
    
    <summary type="html">在 Nginx 下实现 WebDAV 功能，并且通过 lua 脚本实现 WebDAV 中用户的认证以及控制不同用户的目录访问权</summary>
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="webdav" scheme="https://blog.frzli.top/tags/webdav/"/>
    
    <category term="Openresty" scheme="https://blog.frzli.top/tags/Openresty/"/>
    
    <category term="lua" scheme="https://blog.frzli.top/tags/lua/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose + shell 一键化项目部署的一次尝试</title>
    <link href="https://blog.frzli.top/2023/04/05/docker-compose-shell-%E4%B8%80%E9%94%AE%E5%8C%96%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%9A%84%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95/"/>
    <id>https://blog.frzli.top/2023/04/05/docker-compose-shell-%E4%B8%80%E9%94%AE%E5%8C%96%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%9A%84%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95/</id>
    <published>2023-04-05T06:14:33.000Z</published>
    <updated>2023-07-20T09:43:13.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h2><p>某项目存在以下架构</p><p><img src="/2023/04/05/docker-compose-shell-%E4%B8%80%E9%94%AE%E5%8C%96%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%9A%84%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95/image-20230405171010054.png" alt="image-20230405171010054"></p><p>现在需要一键部署自己添加插件编译的 openresty 添加lua脚本以及部署一个基于java的后端服务,并且实现对于java的后端服务实现实时更新的功能，并且通过 Docker Network实现容器之间的相互连接。(如果需要在一键部署中增加redis以及MySQL等等服务也是同理)</p><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><h3 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h3><blockquote><p>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。</p></blockquote><p>通过docker-compose 可以实现创建多个容器并且控制他们的配置和他们之间的关系，本文将通过docker-compose + shell脚本实现一键化部署。</p><h3 id="Docker-Network"><a href="#Docker-Network" class="headerlink" title="Docker Network"></a>Docker Network</h3><p>在Docker中，默认情况下容器与容器、容器与外部宿主机的网络是隔离开来的。安装Docker的时候，docker会创建一个桥接器<code>docker0</code>，通过它才让容器与容器之间、与宿主机之间通信。</p><p>建议使用自定义的网桥来控制哪些容器可以相互通信，可以通过容器名来实现ip的解析。</p><p>在docker-compose.yml中添加以下配置实现创建自定义网桥并且实现容器加入网桥</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span> </span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">oss-application</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">oss-networks</span></span><br><span class="line">  <span class="attr">openresty:</span> </span><br><span class="line">  <span class="string">....</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">oss-openresty</span></span><br><span class="line">    <span class="string">....</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">oss-networks</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">oss-networks:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure><h2 id="编写Openresty的Dockerfile"><a href="#编写Openresty的Dockerfile" class="headerlink" title="编写Openresty的Dockerfile"></a>编写Openresty的Dockerfile</h2><h3 id="因为要自己重新编译一遍-故base-image使用-ubuntu-22-04"><a href="#因为要自己重新编译一遍-故base-image使用-ubuntu-22-04" class="headerlink" title="因为要自己重新编译一遍 故base image使用 ubuntu:22.04"></a>因为要自己重新编译一遍 故base image使用 ubuntu:22.04</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">22.04</span></span><br></pre></td></tr></table></figure><h3 id="给docker容器里的apt换源并且安装Openresty运行与编译所需要的相关依赖"><a href="#给docker容器里的apt换源并且安装Openresty运行与编译所需要的相关依赖" class="headerlink" title="给docker容器里的apt换源并且安装Openresty运行与编译所需要的相关依赖"></a>给docker容器里的apt换源并且安装Openresty运行与编译所需要的相关依赖</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 换源</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">touch</span> /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get clean all</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装相关依赖</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y build-essential libpcre3-dev zlib1g-dev libssl-dev git wget perl curl libxml2 libxml2-dev libxslt-dev</span></span><br></pre></td></tr></table></figure><h3 id="编译Openresty-并添加需要的模块"><a href="#编译Openresty-并添加需要的模块" class="headerlink" title="编译Openresty 并添加需要的模块"></a>编译Openresty 并添加需要的模块</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># openresty源码并解压</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./source/openresty-1.21.4.1.tar.gz /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> / &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    tar -xzvf openresty-1.21.4.1.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cd</span> openresty-1.21.4.1/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ngx_http_dav_module模块</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./source/nginx-dav-ext-module-3.0.0.tar.gz /openresty-1.21.4.1/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /openresty-1.21.4.1 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    tar -xzvf nginx-dav-ext-module-3.0.0.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">mv</span> nginx-dav-ext-module-3.0.0 nginx-dav-ext-module</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置并编译openresty</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /openresty-1.21.4.1 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    ./configure --prefix=/usr/local/openresty \</span></span><br><span class="line"><span class="language-bash">    --with-http_dav_module \</span></span><br><span class="line"><span class="language-bash">    --add-module=nginx-dav-ext-module \</span></span><br><span class="line"><span class="language-bash">    --without-http_gzip_module &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    make &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    make install</span></span><br></pre></td></tr></table></figure><p>这里添加的是http_dav_module以及nginx-dav-ext-module模块，可以根据自己的需求定制</p><h3 id="配置Openresty-相关内容"><a href="#配置Openresty-相关内容" class="headerlink" title="配置Openresty 相关内容"></a>配置Openresty 相关内容</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拷贝配置文件和lua脚本</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -rf /usr/local/openresty/nginx/conf/nginx.conf &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">mkdir</span> -p /usr/local/openresty/nginx/lua &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">mkdir</span> -p /toss/tmp</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./nginx.conf /usr/local/openresty/nginx/conf/</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./lua/referer_and_down_auth.lua /usr/local/openresty/nginx/lua/</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./lua/webdav_auth.lua /usr/local/openresty/nginx/lua/</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p> 这里可以拷贝一些自己要运行的脚本和nginx的配置文件，后面通过路径映射配置也是可以的</p><h3 id="运行openresty"><a href="#运行openresty" class="headerlink" title="运行openresty"></a>运行openresty</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行openresty</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;/usr/local/openresty/bin/openresty&quot;</span>, <span class="string">&quot;-g&quot;</span>, <span class="string">&quot;daemon off;&quot;</span>]</span></span><br></pre></td></tr></table></figure><h3 id="完成Dockerfile"><a href="#完成Dockerfile" class="headerlink" title="完成Dockerfile"></a>完成Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">22.04</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 换源</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">touch</span> /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ jammy-security main restricted universe multiverse&quot;</span> &gt;&gt; /etc/apt/sources.list &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get clean all</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装相关依赖</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    apt-get install -y build-essential libpcre3-dev zlib1g-dev libssl-dev git wget perl curl libxml2 libxml2-dev libxslt-dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># openresty源码并解压</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./source/openresty-1.21.4.1.tar.gz /</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> / &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    tar -xzvf openresty-1.21.4.1.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">cd</span> openresty-1.21.4.1/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ngx_http_dav_module模块</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./source/nginx-dav-ext-module-3.0.0.tar.gz /openresty-1.21.4.1/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /openresty-1.21.4.1 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    tar -xzvf nginx-dav-ext-module-3.0.0.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">mv</span> nginx-dav-ext-module-3.0.0 nginx-dav-ext-module</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置并编译openresty</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cd</span> /openresty-1.21.4.1 &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    ./configure --prefix=/usr/local/openresty \</span></span><br><span class="line"><span class="language-bash">    --with-http_dav_module \</span></span><br><span class="line"><span class="language-bash">    --add-module=nginx-dav-ext-module \</span></span><br><span class="line"><span class="language-bash">    --without-http_gzip_module &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    make &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    make install</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝配置文件和lua脚本</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -rf /usr/local/openresty/nginx/conf/nginx.conf &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">mkdir</span> -p /usr/local/openresty/nginx/lua &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">mkdir</span> -p /toss/tmp</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./nginx.conf /usr/local/openresty/nginx/conf/</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./lua/referer_and_down_auth.lua /usr/local/openresty/nginx/lua/</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./lua/webdav_auth.lua /usr/local/openresty/nginx/lua/</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行openresty</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;/usr/local/openresty/bin/openresty&quot;</span>, <span class="string">&quot;-g&quot;</span>, <span class="string">&quot;daemon off;&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="编写java应用后端的Dockerfile"><a href="#编写java应用后端的Dockerfile" class="headerlink" title="编写java应用后端的Dockerfile"></a>编写java应用后端的Dockerfile</h2><p>这一部分网上很多相似的配置文件没什么好说的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># java 环境</span><br><span class="line">FROM openjdk:<span class="number">17</span>-jdk-slim</span><br><span class="line"># 定义工作目录</span><br><span class="line">WORKDIR /</span><br><span class="line"># 把项目中的所有东西复制到工作目录(app)下面 (这里可以改成自己的jar包)</span><br><span class="line">COPY ./f-oss-<span class="number">0.0</span><span class="number">.1</span>-SNAPSHOT.jar /</span><br><span class="line"># 改变容器的时区</span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">RUN echo <span class="string">&#x27;Asia/Shanghai&#x27;</span> &gt;/etc/timezone</span><br><span class="line">#端口号 （这里可以改成自己的运行命令）</span><br><span class="line">ENTRYPOINT [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/f-oss-0.0.1-SNAPSHOT.jar&quot;</span>,<span class="string">&quot;--spring.profiles.active=pro&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="通过docker-compose-yml部署"><a href="#通过docker-compose-yml部署" class="headerlink" title="通过docker-compose.yml部署"></a>通过docker-compose.yml部署</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span> </span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">./application</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">oss-application</span></span><br><span class="line">    <span class="attr">dns:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">223.6</span><span class="number">.6</span><span class="number">.6</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/toss:/toss:rw</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">oss-networks</span></span><br><span class="line">  <span class="attr">openresty:</span> </span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">./openresty</span></span><br><span class="line">    <span class="comment"># image: openresty-dav:0.1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">12345</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">oss-openresty</span></span><br><span class="line">    <span class="attr">dns:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">223.6</span><span class="number">.6</span><span class="number">.6</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/toss:/toss:rw</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">oss-networks</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">oss-networks:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>目录结构</p><blockquote><p>│  docker-compose.yml<br>│  install.sh<br>│<br>├─application<br>│      Dockerfile<br>│      f-oss-0.0.1-SNAPSHOT.jar<br>│<br>└─openresty<br>    │  Dockerfile<br>    │  nginx.conf<br>    │<br>    ├─lua<br>    │      referer_and_down_auth.lua<br>    │      webdav_auth.lua<br>    │<br>    └─source<br>            nginx-dav-ext-module-3.0.0.tar.gz<br>            openresty-1.21.4.1.tar.gz</p></blockquote><p>在上面的 docker-compose 中将会自动从两个dockerfile中构建docker image，运行，实现目录挂载，端口映射，加入网桥等等操作</p><p>通过运行 <code>docker-compose up</code>可以看到两个docker container已经被成功拉起</p><p><img src="https://blog.frzli.top/2023/04/05/docker-compose-shell-%E4%B8%80%E9%94%AE%E5%8C%96%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%9A%84%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95/image-20230405173539481.png" alt="image-20230405173539481"></p><p><img src="https://blog.frzli.top/2023/04/05/docker-compose-shell-%E4%B8%80%E9%94%AE%E5%8C%96%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%9A%84%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95/image-20230405173548489.png" alt="image-20230405173548489"></p><h2 id="shell-脚本的引入"><a href="#shell-脚本的引入" class="headerlink" title="shell 脚本的引入"></a>shell 脚本的引入</h2><p>通过上面的部署发现当java后端应用更新之后要手动更新重新构建之后的f-oss-0.0.1-SNAPSHOT.jar，从而实现容器中的应用更新。</p><p>我们可以通过实现shell脚本实现每次启动时检查更新，并且自动替换f-oss-0.0.1-SNAPSHOT.jar，重新构建镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Check <span class="keyword">if</span> Docker Compose is installed</span></span><br><span class="line">if ! [ -x &quot;$(command -v docker-compose)&quot; ]; then</span><br><span class="line">  echo &#x27;Error: docker-compose is not installed.&#x27; &gt;&amp;2</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Check <span class="keyword">if</span> wget is installed</span></span><br><span class="line">if ! [ -x &quot;$(command -v wget)&quot; ]; then</span><br><span class="line">  echo &#x27;Error: wget is not installed.&#x27; &gt;&amp;2</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if 检查更新逻辑 then</span><br><span class="line">下载最新版 f-oss-0.0.1-SNAPSHOT.jar</span><br><span class="line">docker-compose build (你的service name)</span><br><span class="line"> fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉起容器</span></span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">又是当运维的一天</summary>
    
    
    
    
    <category term="运维" scheme="https://blog.frzli.top/tags/%E8%BF%90%E7%BB%B4/"/>
    
    <category term="docker" scheme="https://blog.frzli.top/tags/docker/"/>
    
    <category term="docker-compose" scheme="https://blog.frzli.top/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>一次线上事故的反思-MySQL中order by与limit一起使用的坑</title>
    <link href="https://blog.frzli.top/2023/03/29/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8A%E4%BA%8B%E6%95%85%E7%9A%84%E5%8F%8D%E6%80%9D-MySQL%E4%B8%ADorder-by%E4%B8%8Elimit%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9D%91/"/>
    <id>https://blog.frzli.top/2023/03/29/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8A%E4%BA%8B%E6%95%85%E7%9A%84%E5%8F%8D%E6%80%9D-MySQL%E4%B8%ADorder-by%E4%B8%8Elimit%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9D%91/</id>
    <published>2023-03-29T01:11:36.000Z</published>
    <updated>2023-07-20T09:41:09.288Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题场景"><a href="#问题场景" class="headerlink" title="问题场景"></a>问题场景</h2><p>一个新项目提供了一个查询所有Bucket的接口，同时使用了Order By 和 limit 同时进行排序和分页查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">tb_bucket </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">uid <span class="operator">=</span> $&#123;userId&#125; </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">create_time <span class="keyword">DESC</span> </span><br><span class="line">    limit $&#123;(page <span class="operator">-</span> <span class="number">1</span>)<span class="operator">*</span>size&#125;, #&#123;size&#125;</span><br></pre></td></tr></table></figure><p>上线后前端反馈数据出现来回跳动，数据一会出现在第一页一会出现在第二页，导致数据一部分缺失一部分重复</p><p><img src="/2023/03/29/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8A%E4%BA%8B%E6%95%85%E7%9A%84%E5%8F%8D%E6%80%9D-MySQL%E4%B8%ADorder-by%E4%B8%8Elimit%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9D%91/image-20230329092527083.png" alt="image-20230329092527083"></p><p><img src="/2023/03/29/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8A%E4%BA%8B%E6%95%85%E7%9A%84%E5%8F%8D%E6%80%9D-MySQL%E4%B8%ADorder-by%E4%B8%8Elimit%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9D%91/image-20230329092538575.png" alt="image-20230329092538575"></p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>发生问题后首先检查了一遍代码逻辑，并未发现其他问题，当把SQL拿出来单独执行的时候出现了数据错误的问题。发现出现数据错误的数据都有相同的create_time，而SQL又是基于create_time排序的，故怀疑order by 和 limit 同时使用的问题。<strong>以create_time进行降序排序，当create_time存在多条重复时基于limit分页出现数据错误问题。</strong></p><p>查阅了MySQL的官方文档发现的MySQL limit的查询优化所导致</p><blockquote><p>If multiple rows have identical values in the <code>ORDER BY</code> columns, the server is free to return those rows in any order, and may do so differently depending on the overall execution plan. In other words, the sort order of those rows is nondeterministic with respect to the nonordered columns</p></blockquote><p>大意就是<strong>如果多个行在“ORDER BY”列中具有相同的值，服务器可以自由地以任何顺序返回这些行，并且可能会根据整体执行计划以不同的方式返回。换句话说，这些行的排序顺序相对于未排序的列是不确定的</strong>。</p><p><a href="https://dev.mysql.com/doc/refman/8.0/en/limit-optimization.html">MySQL 官方文档原文</a></p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>解决思路是：避免ORDER BY列的值出现重复。因此，可以加入排序列，比如id等等。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">tb_bucket </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">uid <span class="operator">=</span> $&#123;userId&#125; </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">create_time <span class="keyword">DESC</span> id <span class="keyword">ASC</span></span><br><span class="line">    limit $&#123;(page <span class="operator">-</span> <span class="number">1</span>)<span class="operator">*</span>size&#125;, #&#123;size&#125;</span><br></pre></td></tr></table></figure><p>加入id作为排序条件后，数据混乱的问题解决</p><p><img src="/2023/03/29/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8A%E4%BA%8B%E6%95%85%E7%9A%84%E5%8F%8D%E6%80%9D-MySQL%E4%B8%ADorder-by%E4%B8%8Elimit%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9D%91/image-20230329142622876.png" alt="image-20230329142622876"></p><p><img src="/2023/03/29/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8A%E4%BA%8B%E6%95%85%E7%9A%84%E5%8F%8D%E6%80%9D-MySQL%E4%B8%ADorder-by%E4%B8%8Elimit%E4%B8%80%E8%B5%B7%E4%BD%BF%E7%94%A8%E7%9A%84%E5%9D%91/image-20230329142652385.png" alt="image-20230329142652385"></p>]]></content>
    
    
    <summary type="html">一次线上事故的反思-MySQL中order by与limit一起使用的坑</summary>
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="MySQL" scheme="https://blog.frzli.top/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Openresty 实现 WebDAV 功能 ，并且实现在 WebDAV 下多用户认证以及访问目录控制</title>
    <link href="https://blog.frzli.top/2023/03/25/Openresty-%E5%AE%9E%E7%8E%B0-WebDAV-%E5%8A%9F%E8%83%BD-%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AE%9E%E7%8E%B0%E5%9C%A8-WebDAV-%E4%B8%8B%E5%A4%9A%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E4%BB%A5%E5%8F%8A%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95%E6%8E%A7%E5%88%B6/"/>
    <id>https://blog.frzli.top/2023/03/25/Openresty-%E5%AE%9E%E7%8E%B0-WebDAV-%E5%8A%9F%E8%83%BD-%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AE%9E%E7%8E%B0%E5%9C%A8-WebDAV-%E4%B8%8B%E5%A4%9A%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E4%BB%A5%E5%8F%8A%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95%E6%8E%A7%E5%88%B6/</id>
    <published>2023-03-25T12:26:54.000Z</published>
    <updated>2023-07-20T09:39:41.063Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-介绍"><a href="#0-介绍" class="headerlink" title="0.介绍"></a>0.介绍</h2><blockquote><p>基于Web的分布式编写和版本控制（WebDAV）是超文本传输协议（HTTP）的扩展，有利于用户间协同编辑和管理存储在万维网服务器文档。WebDAV由互联网工程任务组的工作组在RFC 4918中定义。<br>WebDAV协议为用户在服务器上创建、更改和移动文档提供了一个框架。WebDAV协议最重要的功能包括维护作者或修改日期的属性、名字空间管理、集合和覆盖保护。维护属性包括创建、删除和查询文件信息等。名字空间管理处理在服务器名称空间内复制和移动网页的能力。集合（Collections）处理各种资源的创建、删除和列举 (from wikipedia)  <a href="https://zh.wikipedia.org/zh-cn/%E5%9F%BA%E4%BA%8EWeb%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%96%E5%86%99%E5%92%8C%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6">wikipedia</a> </p></blockquote><p>nginx 中的 <a href="http://nginx.org/en/docs/http/ngx_http_dav_module.html">ngx_http_dav_module</a> 模块提供了该功能的支持，<a href="https://github.com/arut/nginx-dav-ext-module">nginx-dav-ext-module</a> 主要是实现了 NGINX WebDAV 未实现的命令支持，包括：PROPFIND &amp; OPTIONS 对于完整的 WebDAV 支持</p><p>通过 windows 自带的网络驱动器映射可以实现以下效果</p><p><img src="/2023/03/25/Openresty-%E5%AE%9E%E7%8E%B0-WebDAV-%E5%8A%9F%E8%83%BD-%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AE%9E%E7%8E%B0%E5%9C%A8-WebDAV-%E4%B8%8B%E5%A4%9A%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E4%BB%A5%E5%8F%8A%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95%E6%8E%A7%E5%88%B6/image-20230325204817756.png" alt="image-20230325204817756"></p><h2 id="1-Openresty-的编译与安装"><a href="#1-Openresty-的编译与安装" class="headerlink" title="1.Openresty 的编译与安装"></a>1.Openresty 的编译与安装</h2><p>OpenResty 是一个基于 Nginx 的 Web 平台，整合了诸如 LuaJIT、LuaNginxModule 等模块,所以我们用 Openresty 代替 nginx</p><p>因为webdav需要 ngx_http_dav_module 以及 nginx-dav-ext-module 的支持 ，所以我们要自己编译自己的Openresty </p><p><strong>环境 Ubuntu 22.04</strong></p><h3 id="1-1-Openresty-源代码下载"><a href="#1-1-Openresty-源代码下载" class="headerlink" title="1.1 Openresty 源代码下载"></a>1.1 Openresty 源代码下载</h3><p>通过 <a href="https://openresty.org/cn/download.html">Openresty 官方网站</a>获取最新的源代码并且解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://openresty.org/download/openresty-1.21.4.1.tar.gz</span><br><span class="line">tar -xzvf openresty-1.21.4.1.tar.gz</span><br></pre></td></tr></table></figure><h3 id="1-2-开发依赖安装"><a href="#1-2-开发依赖安装" class="headerlink" title="1.2 开发依赖安装"></a>1.2 开发依赖安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">apt-get install libpcre3-dev \</span><br><span class="line">    libssl-dev perl make build-essential curl \</span><br><span class="line">    libxml2 libxml2-dev libxslt-dev</span><br></pre></td></tr></table></figure><h3 id="1-3-下载-nginx-dav-ext-module-并且配置编译时所添加的module"><a href="#1-3-下载-nginx-dav-ext-module-并且配置编译时所添加的module" class="headerlink" title="1.3 下载 nginx-dav-ext-module 并且配置编译时所添加的module"></a>1.3 下载 nginx-dav-ext-module 并且配置编译时所添加的module</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> openresty-1.21.4.1</span><br><span class="line"></span><br><span class="line">wget https://codeload.github.com/arut/nginx-dav-ext-module/tar.gz/refs/tags/v3.0.0 -O nginx-dav-ext-module.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xzvf nginx-dav-ext-module.tar.gz</span><br><span class="line"></span><br><span class="line">./configure --prefix=/usr/local/openresty \</span><br><span class="line">            --with-http_dav_module \</span><br><span class="line">            --add-module=nginx-dav-ext-module \</span><br><span class="line">            --without-http_gzip_module </span><br></pre></td></tr></table></figure><h3 id="1-4-编译并且安装"><a href="#1-4-编译并且安装" class="headerlink" title="1.4 编译并且安装"></a>1.4 编译并且安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gmake</span><br><span class="line"></span><br><span class="line">gmake install </span><br></pre></td></tr></table></figure><p>执行上述命令后会发现 Openresty 已经安装在 &#x2F;usr&#x2F;local&#x2F;openresty 但是 openresty 命令还是不可用,可以通过添加软连接实现可以在任意文件夹使用 openresty 命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/openresty/bin</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">ln</span> -s `<span class="built_in">pwd</span>`/openresty /usr/local/bin/openresty</span><br><span class="line">sudo <span class="built_in">ln</span> -s `<span class="built_in">pwd</span>`/opm /usr/local/bin/opm</span><br></pre></td></tr></table></figure><p>运行 Openresty 访问 <a href="http://localhost/">http://localhost</a> 将会出现 Welcome to OpenResty! 字样，代表 OpenResty 已经安装成功!</p><p><img src="/2023/03/25/Openresty-%E5%AE%9E%E7%8E%B0-WebDAV-%E5%8A%9F%E8%83%BD-%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AE%9E%E7%8E%B0%E5%9C%A8-WebDAV-%E4%B8%8B%E5%A4%9A%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E4%BB%A5%E5%8F%8A%E8%AE%BF%E9%97%AE%E7%9B%AE%E5%BD%95%E6%8E%A7%E5%88%B6/image-20230325205506326.png" alt="image-20230325205506326"></p><h2 id="2-最简单的-Webdav-实现"><a href="#2-最简单的-Webdav-实现" class="headerlink" title="2. 最简单的 Webdav 实现"></a>2. 最简单的 Webdav 实现</h2><p>修改配置文件 <code>/usr/local/openresty/nginx/conf/nginx.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">... # 你自己的某些配置</span><br><span class="line"> </span><br><span class="line">    server &#123;</span><br><span class="line">        ...</span><br><span class="line"> </span><br><span class="line">        location / &#123;</span><br><span class="line">        # webdav 访问的根目录 ，暂时使用root </span><br><span class="line">            root /www/wwwroot/webdav; </span><br><span class="line">    # 文件暂存地址</span><br><span class="line">            client_body_temp_path /www/wwwroot/webdav/client_temp; </span><br><span class="line"> # webdav 支持的方法</span><br><span class="line">            dav_methods PUT DELETE MKCOL COPY MOVE;</span><br><span class="line">            dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;</span><br><span class="line">            </span><br><span class="line">            create_full_put_path on;</span><br><span class="line">            dav_accessuser:rw group:rw  all:r;</span><br><span class="line"> # 网页页面自动索引文件</span><br><span class="line">            autoindex on;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样可以实现最基本的无认证，无动态目录WebDAV </p><p>这篇我们编译了带实现 webdav module支持的openresy ，并且实现了最简单的WebDAV，下一篇将会通过编写lua脚本实现多用户认证，以及动态控制访问目录的功能（应该会很快写出来）</p>]]></content>
    
    
    <summary type="html">在 Nginx 下实现 WebDAV 功能，并且通过 lua 脚本实现 WebDAV 中用户的认证以及控制不同用户的目录访问权</summary>
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="webdav" scheme="https://blog.frzli.top/tags/webdav/"/>
    
    <category term="Openresty" scheme="https://blog.frzli.top/tags/Openresty/"/>
    
    <category term="lua" scheme="https://blog.frzli.top/tags/lua/"/>
    
  </entry>
  
  <entry>
    <title>基础算法-二分答案</title>
    <link href="https://blog.frzli.top/2023/03/21/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    <id>https://blog.frzli.top/2023/03/21/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/</id>
    <published>2023-03-21T08:01:12.000Z</published>
    <updated>2023-07-20T09:34:27.078Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二分答案："><a href="#二分答案：" class="headerlink" title="二分答案："></a>二分答案：</h2><blockquote><p>解题的时候往往会考虑枚举答案然后检验枚举的值是否正确。若满足单调性，则满足使用二分法的条件。把这里的枚举换成二分，就变成了「二分答案」。<a href="https://oi-wiki.org/basic/binary/#%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88">OI-WIKI</a></p></blockquote><h2 id="二分答案模板"><a href="#二分答案模板" class="headerlink" title="二分答案模板"></a>二分答案模板</h2><h3 id="寻找-gt-x3D-的最小值"><a href="#寻找-gt-x3D-的最小值" class="headerlink" title="寻找 &gt;&#x3D; 的最小值"></a>寻找 &gt;&#x3D; 的最小值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">bserach_l</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + ((r - l) &gt;&gt; <span class="number">1</span>); <span class="comment">// 防止溢出</span></span><br><span class="line">        <span class="keyword">if</span> (check(mid))</span><br><span class="line">            r = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="寻找-lt-x3D-的模板"><a href="#寻找-lt-x3D-的模板" class="headerlink" title="寻找 &lt;&#x3D; 的模板"></a>寻找 &lt;&#x3D; 的模板</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">bserach_l</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + ((r - l) &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>; <span class="comment">// 防止溢出</span></span><br><span class="line">        <span class="keyword">if</span> (check(mid))</span><br><span class="line">            r = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            l = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>例题 <a href="https://www.luogu.com.cn/problem/P2440">P2440 木材加工</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n,k;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        n = sc.nextInt();</span><br><span class="line">        k = sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            arr[i] = sc.nextInt();</span><br><span class="line">            max = Math.max(max,arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span> , r = max;</span><br><span class="line">        <span class="type">int</span> <span class="variable">val</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxVal</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l &lt;  r)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            val = getChunkNums(arr,mid);</span><br><span class="line">            <span class="keyword">if</span> (val &lt; k)&#123;</span><br><span class="line">                r = mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (mid &gt;= res)&#123;</span><br><span class="line">                    res = mid;</span><br><span class="line">                    maxVal = val;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(maxVal &gt;= k ? res : <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getChunkNums</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> l)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">0</span>; i1 &lt; arr.length; i1++) &#123;</span><br><span class="line">            res += arr[i1] / l;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">二分答案的模板与例题</summary>
    
    
    
    
    <category term="算法" scheme="https://blog.frzli.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>go学习笔记和一些语法糖</title>
    <link href="https://blog.frzli.top/2023/03/21/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.frzli.top/2023/03/21/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-03-21T07:23:10.000Z</published>
    <updated>2023-07-20T09:27:33.239Z</updated>
    
    <content type="html"><![CDATA[<h3 id="…-的用法"><a href="#…-的用法" class="headerlink" title="… 的用法"></a>… 的用法</h3><h4 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">a</span><span class="params">(args ...<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, val := <span class="keyword">range</span> args &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="打散slice"><a href="#打散slice" class="headerlink" title="打散slice"></a>打散slice</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">a</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">    b(s...)  <span class="comment">// 这里的slice &#123;1，2，3&#125; 被打散为 1，2，3 传入函数b</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">b</span><span class="params">(args2 ...<span class="type">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> _, i := <span class="keyword">range</span> args2 &#123;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="go中的继承"><a href="#go中的继承" class="headerlink" title="go中的继承"></a>go中的继承</h3><p>先看一段代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> (</span><br><span class="line">RouterGroup <span class="keyword">struct</span> &#123;</span><br><span class="line">prefix      <span class="type">string</span></span><br><span class="line">middlewares []HandlerFunc</span><br><span class="line">parent      *RouterGroup</span><br><span class="line">engine      *Engine</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Engine <span class="keyword">struct</span> &#123;</span><br><span class="line">*RouterGroup</span><br><span class="line">router *router</span><br><span class="line">groups []*RouterGroup</span><br><span class="line">&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>可以看到上面<code>Engine</code>中包含了<code>*RouterGroup</code>这一匿名字段，<code>Engine</code> 结构体将直接继承 <code>RouterGroup</code> 中的所有字段和方法，并且不需要使用 <code>.prefix</code>、<code>.middlewares</code>、<code>.parent</code> 等字段来引用 <code>RouterGroup</code> 中的属性和方法，而可以直接使用 <code>Engine</code> 实例进行访问。</p><h3 id="go-tag"><a href="#go-tag" class="headerlink" title="go tag"></a>go tag</h3><p>tag 是一种结构化的注释方式，它可以用于给结构体字段添加元数据，例如字段的名称、类型、格式、验证规则等信息。</p><p>示例如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span> <span class="string">`json:&quot;name&quot; xml:&quot;name&quot;`</span></span><br><span class="line">    Age  <span class="type">int</span>    <span class="string">`json:&quot;age&quot; xml:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以最终通过反射拿到tag的k-v信息</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;reflect&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span> <span class="string">`json:&quot;name&quot; xml:&quot;name&quot;`</span></span><br><span class="line">    Age  <span class="type">int</span>    <span class="string">`json:&quot;age&quot; xml:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    p := Person&#123;Name: <span class="string">&quot;Alice&quot;</span>, Age: <span class="number">25</span>&#125;</span><br><span class="line">    t := reflect.TypeOf(p)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; t.NumField(); i++ &#123;</span><br><span class="line">        field := t.Field(i)</span><br><span class="line">        tag := field.Tag</span><br><span class="line">        fmt.Printf(<span class="string">&quot;Field: %s, JSON tag: %s, XML tag: %s\n&quot;</span>,</span><br><span class="line">            field.Name, tag.Get(<span class="string">&quot;json&quot;</span>), tag.Get(<span class="string">&quot;xml&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="cap和len"><a href="#cap和len" class="headerlink" title="cap和len"></a>cap和len</h3><p><code>cap</code> 和 <code>len</code> 都是内置函数，用于获取切片、数组、map 和 channel 的长度和容量信息。</p><p>slice作为一个array的引用其cap和len并不一定相等，slice的容量可以动态扩展，如果在使用 <code>append</code> 函数将元素添加到切片时长度超过了当前容量，Go 会动态分配一块更大的内存作为底层数组，并将原有数据复制到新的内存空间中，完成切片的扩容过程。如果切片的长度没有超过容量，则不会进行扩容。这个过程会导致切片的地址发生变化。可以通过对比改变前后切片的地址来判断是否扩容。</p><h3 id="any"><a href="#any" class="headerlink" title="any"></a>any</h3><p>在go1.18之后添加的新关键字 <a href="https://github.com/golang/go/issues/49884">all: rewrite <code>interface&#123;&#125;</code> to <code>any</code> #49884</a></p><p>等同于之前的interface{} </p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> any <span class="keyword">interface</span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">a</span><span class="params">(v any)</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> v.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="type">int</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;int type val&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="type">bool</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;bool type val&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">go学习过程中的一些知识点</summary>
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="go" scheme="https://blog.frzli.top/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot创建自己的Start</title>
    <link href="https://blog.frzli.top/2023/03/05/SpringBoot%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84Starter/"/>
    <id>https://blog.frzli.top/2023/03/05/SpringBoot%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84Starter/</id>
    <published>2023-03-05T13:33:26.000Z</published>
    <updated>2023-07-20T09:26:35.134Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>创建SpringBoot项目</p><p>包含以下依赖</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--自动生成meta-data--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">         </span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>修改<code>pom.xml</code></p><p>修改pom.xml为对应项目名称 </p><p>starter推荐命名 xxxxx-start</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.frz<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>frzApi-client-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>frzApi-client-sdk<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>frzApi-client-sdk<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写<code>AutoConfiguration</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(&quot;frzapi.client&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ComponentScan</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FrzApiClientConfig</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String accessKey;</span><br><span class="line">    <span class="keyword">private</span> String secretKey;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> FrzApiClient <span class="title function_">frzApiClient</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FrzApiClient</span>(accessKey, secretKey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过<code>ConfigurationProperties</code>注解能够读取application 中的配置属性</p></li><li><p>配置<code>EnableAutoConfiguration</code></p><p>在<code>resource/META-INF</code>创建<code>spring.factories</code>文件,设置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span>=<span class="string">xxx</span></span><br></pre></td></tr></table></figure><blockquote><p>xxx为配置类Reference</p></blockquote></li></ol><p><img src="/2023/03/05/SpringBoot%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84Starter/im1.png" alt="目录结构" title="目录结构"></p><p>通过maven install 后即成功安装到本地maven仓库</p><p>在其他项目的依赖中添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.frz<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>frzApi-client-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>既可以正常使用</p>]]></content>
    
    
    <summary type="html">开发API开放平台，提供java对应的客户端SDK</summary>
    
    
    
    
    <category term="后端" scheme="https://blog.frzli.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="sprigboot" scheme="https://blog.frzli.top/tags/sprigboot/"/>
    
    <category term="java" scheme="https://blog.frzli.top/tags/java/"/>
    
  </entry>
  
</feed>
